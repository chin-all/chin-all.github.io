<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>藤源Tofu店</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-03-07T10:24:07.924Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>chinyan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Evil.js --- 浏览器不掷骰子</title>
    <link href="http://example.com/posts/48213/"/>
    <id>http://example.com/posts/48213/</id>
    <published>2023-08-03T16:00:00.000Z</published>
    <updated>2025-03-07T10:24:07.924Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Evil.js 是一个 JavaScript 库，它旨在提供一种简单而强大的方法来生成各种恶意代码片段，以测试和演示安全性漏洞。尽管该库的名称可能让人误解，但它实际上是为了帮助安全专业人员和开发人员更好地理解和防范潜在的安全风险。</p><p>Evil.js 提供了多种不同类型的恶意代码生成器，包括 XSS（跨站脚本攻击）、CSRF（跨站请求伪造）、点击劫持等。使用这些生成器，安全研究人员可以模拟不同类型的攻击，以测试应用程序的安全性。</p><p>然而，需要明确的是，Evil.js 应该仅用于合法和合规的安全测试目的。它不应该被用于恶意活动或未经授权的攻击。任何安全测试都应该在合法的环境中进行，并且只有在获得适当的许可和授权后才能使用此类工具。</p><p>总之，Evil.js 是一个用于模拟安全漏洞的实用工具，可以帮助开发人员和安全专业人员更好地理解和保护他们的应用程序。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i lodash-utils</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;Evil.js 是一个 JavaScript 库，它旨在提供一种简单而强大的方法来生成各种恶意代码片段，以测试和演示安全性漏洞。尽管该库的名</summary>
      
    
    
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>PPSSPP模拟器：在计算机和移动设备上畅玩PSP游戏</title>
    <link href="http://example.com/posts/10610/"/>
    <id>http://example.com/posts/10610/</id>
    <published>2023-06-29T14:10:48.518Z</published>
    <updated>2023-06-29T14:37:18.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>PPSSPP是一款功能强大的开源模拟器，可以让你在计算机和移动设备上重新体验索尼PSP游戏的乐趣。本文将介绍PPSSPP模拟器的特点、使用方法以及如何在不同平台上运行PSP游戏。</p></blockquote><ol><li><p>什么是PPSSPP模拟器？</p><ul><li>简介：PPSSPP是一款跨平台的PSP模拟器，它能够在计算机（Windows、Mac、Linux）和移动设备（Android、iOS）上模拟运行PSP游戏。</li><li>特点：PPSSPP模拟器具备高度准确的模拟能力，支持图形渲染、音频效果、控制器支持等功能，让用户可以以原汁原味的方式畅玩PSP游戏。</li></ul></li><li><p>如何使用PPSSPP模拟器？</p><ul><li>下载与安装：在PPSSPP官方网站上，根据你的操作系统选择相应的版本进行下载和安装。</li><li>获取PSP游戏ROM：你可以从合法渠道购买PSP游戏光盘，并通过特定的方法将游戏转换为模拟器可识别的ROM格式。</li><li>导入游戏ROM：在PPSSPP模拟器中，通过文件管理器功能导入游戏ROM文件。</li><li>设置和优化：根据个人偏好，对模拟器进行设置和优化，如调整图形设置、音频设置、控制器映射等。</li></ul></li><li><p>在不同平台上运行PSP游戏</p><ul><li>计算机：在计算机上运行PPSSPP模拟器，通过键盘或外接控制器来操作游戏。</li><li>移动设备：在Android或iOS设备上安装PPSSPP模拟器应用，通过屏幕触控或连接外接控制器来操作游戏。</li></ul></li></ol><p>结语：PPSSPP模拟器为喜爱PSP游戏的玩家提供了一个便捷且高质量的游戏体验平台。无论是在计算机还是移动设备上，通过PPSSPP模拟器，你可以重温那些经典的PSP游戏，感受游戏的乐趣。赶紧下载PPSSPP模拟器，开始你的PSP游戏之旅吧！</p><hr><p>ppsspp下载，<a href="https://www.ppsspp.org/download/">点我直达</a></p><p>游戏下载链接推荐，<a href="https://www.oldmanemu.net/">点我直达</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;PPSSPP是一款功能强大的开源模拟器，可以让你在计算机和移动设备上重新体验索尼PSP游戏的乐趣。本文将介绍PPSSPP模拟器的特点、使用方法以及如何在不同平台上运行PSP游戏。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;什么是P</summary>
      
    
    
    
    
    <category term="实用" scheme="http://example.com/tags/%E5%AE%9E%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>国内用户订阅土耳其区 iCloud+ 攻略</title>
    <link href="http://example.com/posts/59526/"/>
    <id>http://example.com/posts/59526/</id>
    <published>2023-06-25T16:00:00.000Z</published>
    <updated>2023-06-29T15:05:44.000Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>iCloud+储存空间</th><th>国区 iCloud+ 定价</th><th>土区 iCloud+ 定价</th></tr></thead><tbody><tr><td>50GB</td><td>¥6&#x2F;月</td><td>6.49 TL（约￥2.37）&#x2F; 月</td></tr><tr><td>200GB</td><td>¥21&#x2F;月</td><td>9.99 TL（约￥7.29）&#x2F; 月</td></tr><tr><td>2TB</td><td>¥68&#x2F;月</td><td>64.99 TL（约￥23.70）&#x2F; 月</td></tr></tbody></table><blockquote><p>想要享受更多存储空间和高级功能？在大陆订阅土耳其区的iCloud+和购买土区礼品卡是一个不错的选择。本篇攻略将为你详细介绍在大陆如何订阅土耳其区的iCloud+和购买土区礼品卡的方法和步骤。</p></blockquote><p>正文：</p><ol><li><p>订阅土耳其区的iCloud+</p><ul><li>第一步：打开设备的设置（iOS设备为「设置」，Mac设备为「系统偏好设置」）。</li><li>第二步：点击「你的姓名&#x2F;Apple ID」，进入账户设置页面。</li><li>第三步：选择「iCloud」，然后点击「储存空间」。</li><li>第四步：在储存空间页面中，点击「订阅」按钮。</li><li>第五步：在订阅页面中，选择「iCloud+」，然后点击「选择储存方案」。</li><li>第六步：在储存方案页面中，选择土耳其区的合适套餐，并按照提示完成支付和订阅过程。</li></ul></li><li><p>购买土区的礼品卡</p><ul><li>第一步：前往可信赖的第三方电商平台（如海外代购网站）或当地土耳其区iTunes&#x2F;Apple Store官方网站。</li><li>第二步：搜索土耳其区的iTunes&#x2F;Apple Store礼品卡，选择合适的面额和数量。</li><li>第三步：将所选的礼品卡添加到购物车，并按照网站的购买流程完成支付和订单。</li><li>第四步：根据网站的提供方式，获取土耳其区的礼品卡兑换码。</li><li>第五步：打开App Store或iTunes Store，点击「兑换」按钮。</li><li>第六步：输入土耳其区的礼品卡兑换码，按照提示完成兑换过程。</li></ul></li></ol><p>注意事项：</p><ul><li>在订阅土耳其区的iCloud+和购买土区礼品卡时，请确保你的支付方式和账户信息的准确性和合法性。</li><li>购买礼品卡时，选择可信赖的第三方平台或官方渠道，避免遭遇欺诈或虚假商品。</li></ul><p>结语：通过订阅土耳其区的iCloud+和购买土区的礼品卡，你可以享受到更多存储空间和高级功能，提升你在苹果设备上的使用体验。遵循本攻略中的步骤和注意事项，你将能够轻松完成订阅</p><p>或者参考这篇攻略，<a href="https://zblogs.top/how-to-subscribe-to-turkey-icloud/">点我直达</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;iCloud+储存空间&lt;/th&gt;
&lt;th&gt;国区 iCloud+ 定价&lt;/th&gt;
&lt;th&gt;土区 iCloud+ 定价&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;50GB&lt;/td&gt;
&lt;td&gt;¥6&amp;#x2F</summary>
      
    
    
    
    
    <category term="实用" scheme="http://example.com/tags/%E5%AE%9E%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>git的一些东西</title>
    <link href="http://example.com/posts/21451/"/>
    <id>http://example.com/posts/21451/</id>
    <published>2023-06-23T16:00:00.000Z</published>
    <updated>2023-06-24T15:10:58.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="git-常用指令"><a href="#git-常用指令" class="headerlink" title="git 常用指令"></a>git 常用指令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">git add . (暂存更改)</span><br><span class="line">git commit -m <span class="string">&#x27;提交的内容&#x27;</span></span><br><span class="line">git pull origin dev （拉远程dev分支）</span><br><span class="line">git push （推送到远程）</span><br><span class="line">// 新建分支</span><br><span class="line">git branch xxx (xxx填写你的分支名称)</span><br><span class="line">// 查看所有分支</span><br><span class="line">git branch -a</span><br><span class="line">// 切换到某一分支</span><br><span class="line">git checkout xxx (xxx填写要切换的分支名称）</span><br><span class="line">// 提交代码到指定分支</span><br><span class="line">git push origin xxx （xxx为要提交代码的分支名称）</span><br><span class="line">// 更新本地分支</span><br><span class="line">git fetch</span><br><span class="line">// 修改分支名</span><br><span class="line">$ git branch -m xxx（xxx为修改后的分支名称）</span><br><span class="line">// 修改分支名后推送分支</span><br><span class="line">git push origin xxx(xxx为修改后的分支名称)</span><br></pre></td></tr></table></figure><h3 id="git-分支策略"><a href="#git-分支策略" class="headerlink" title="git 分支策略"></a>git 分支策略</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/* 需求：git将当前分支的修改推到其他分支 */</span><br><span class="line">git stash // 把暂存区内的修改存储起来</span><br><span class="line">git checkout 分支名 // 切换到正确的分支：</span><br><span class="line">git stash pop // 将存储的修改取出来，继续进行提交等正常的操作</span><br></pre></td></tr></table></figure><h3 id="git-commit-提交规范"><a href="#git-commit-提交规范" class="headerlink" title="git commit 提交规范"></a>git commit 提交规范</h3><p>Git commit message规范指提交注释时的编写规范，统一方便维护，如下</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">feat:新功能</span><br><span class="line">fix:修复一个bug</span><br><span class="line">docs:只改了文档</span><br><span class="line">style:修改不涉及代码的主要逻辑(如格式化了代码)</span><br><span class="line">refactor:改动了代码，既不是新功能也不是修复bug</span><br><span class="line">perf:优化了代码，提升了性能</span><br><span class="line">test:增加或修改了代码测试</span><br><span class="line">build:更改了构建流程相关的配置文件和包(如glup, npm)</span><br><span class="line">ci:更改了CI配置文件或脚本等(如Travis, Circle, BrowserStack, SauceLabs)</span><br><span class="line">chore:其它不涉及源代码和测试代码的修改</span><br><span class="line">revert: git revert一次提交 </span><br></pre></td></tr></table></figure><h3 id="要配置-Git-的账号和邮箱，可以按照以下步骤进行操作："><a href="#要配置-Git-的账号和邮箱，可以按照以下步骤进行操作：" class="headerlink" title="要配置 Git 的账号和邮箱，可以按照以下步骤进行操作："></a>要配置 Git 的账号和邮箱，可以按照以下步骤进行操作：</h3><ol><li><p>打开终端或命令行工具，并导航到您的项目的根目录。</p></li><li><p>运行以下命令，将您的用户名配置为全局默认值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;Your Name&quot;</span><br></pre></td></tr></table></figure><p>将 “Your Name” 替换为您希望显示的用户名。</p></li><li><p>运行以下命令，将您的邮箱地址配置为全局默认值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;your.email@example.com&quot;</span><br></pre></td></tr></table></figure><p>将 “<a href="mailto:&#x79;&#x6f;&#x75;&#x72;&#46;&#101;&#x6d;&#97;&#105;&#108;&#64;&#x65;&#120;&#97;&#109;&#112;&#108;&#x65;&#46;&#x63;&#x6f;&#x6d;">&#x79;&#x6f;&#x75;&#x72;&#46;&#101;&#x6d;&#97;&#105;&#108;&#64;&#x65;&#120;&#97;&#109;&#112;&#108;&#x65;&#46;&#x63;&#x6f;&#x6d;</a>“ 替换为您的有效邮箱地址。</p></li></ol><p>配置完成后，每次提交代码时，Git 将会使用您所配置的用户名和邮箱信息作为提交记录的作者信息。</p><p>请注意，如果您希望仅为当前项目设置特定的用户名和邮箱，而不是全局默认值，可以省略 <code>--global</code> 参数，并在项目目录中运行相应的命令，而非在全局环境中执行。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name &quot;Your Name&quot;</span><br><span class="line">git config user.email &quot;your.email@example.com&quot;</span><br></pre></td></tr></table></figure><p>这样可以在当前项目中覆盖全局默认值。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;git-常用指令&quot;&gt;&lt;a href=&quot;#git-常用指令&quot; class=&quot;headerlink&quot; title=&quot;git 常用指令&quot;&gt;&lt;/a&gt;git 常用指令&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla</summary>
      
    
    
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Mac下安装NVM</title>
    <link href="http://example.com/posts/32272/"/>
    <id>http://example.com/posts/32272/</id>
    <published>2023-04-30T16:00:00.000Z</published>
    <updated>2023-06-17T04:26:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是NVM"><a href="#什么是NVM" class="headerlink" title="什么是NVM"></a>什么是NVM</h2><blockquote><p>Node.js Version Manager，用来管理 node 的版本。</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装NVM"><a href="#安装NVM" class="headerlink" title="安装NVM"></a>安装NVM</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.36.0/install.sh | bash</span><br></pre></td></tr></table></figure><h3 id="校验nvm安装是否成功"><a href="#校验nvm安装是否成功" class="headerlink" title="校验nvm安装是否成功"></a>校验nvm安装是否成功</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm --version</span><br></pre></td></tr></table></figure><h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><p>安装最新稳定版 node</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install stable </span><br></pre></td></tr></table></figure><p>安装&#x2F;卸载指定版本 node， 例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm install v16.20.0 </span><br><span class="line">nvm uninstall v16.20.0</span><br></pre></td></tr></table></figure><p>切换指定版本 node</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use v16.20.0</span><br></pre></td></tr></table></figure><p>列出所有安装的 node 版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p>设置默认 node 版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="built_in">alias</span> default v16.20.0</span><br></pre></td></tr></table></figure><h2 id="在-macOS-上安装-nvm（Node-Version-Manager）可以按照以下步骤进行操作："><a href="#在-macOS-上安装-nvm（Node-Version-Manager）可以按照以下步骤进行操作：" class="headerlink" title="在 macOS 上安装 nvm（Node Version Manager）可以按照以下步骤进行操作："></a>在 macOS 上安装 nvm（Node Version Manager）可以按照以下步骤进行操作：</h2><ol><li><p>打开终端：你可以在”应用程序”文件夹中的”实用工具”文件夹中找到”终端”应用程序。</p></li><li><p>使用 curl 安装 nvm：在终端中运行以下命令来下载并安装 nvm：</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash</span><br></pre></td></tr></table></figure><p>这将下载并运行 nvm 的安装脚本。你可以根据需要更改安装脚本的版本号，将 <code>v0.38.0</code> 替换为你想要安装的特定版本。</p><h3 id="配置nvm，shell"><a href="#配置nvm，shell" class="headerlink" title="配置nvm，shell"></a>配置nvm，shell</h3><ol><li>配置 shell：nvm 安装完成后，你需要在你的 shell 配置文件中添加相应的配置。对于大多数 macOS 用户来说，使用的是 Bash shell，你可以在终端中运行以下命令来编辑 <code>.bashrc</code> 文件：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano ~/.bashrc</span><br></pre></td></tr></table></figure><p>在打开的文件中，将以下配置粘贴到文件的末尾：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export NVM_DIR=&quot;$HOME/.nvm&quot;</span><br><span class="line">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm</span><br></pre></td></tr></table></figure><p>按下 <code>Ctrl + X</code> 保存并退出 nano 编辑器。</p><ol start="2"><li>重新加载 shell 配置：运行以下命令以使新的 shell 配置生效：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><ol start="3"><li>验证安装：最后，你可以通过运行以下命令来验证 nvm 是否正确安装：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm --version</span><br></pre></td></tr></table></figure><p>如果一切顺利，你应该看到 nvm 的版本号输出。</p><h3 id="配置nvm，zsh"><a href="#配置nvm，zsh" class="headerlink" title="配置nvm，zsh"></a>配置nvm，zsh</h3><p>如果你在 macOS 上使用的是 Zsh 而不是 Bash，你需要在 Zsh 的配置文件中添加 nvm 的配置。请按照以下步骤进行操作：</p><ol><li><p>打开终端：你可以在”应用程序”文件夹中的”实用工具”文件夹中找到”终端”应用程序。</p></li><li><p>编辑 Zsh 配置文件：运行以下命令来编辑 <code>.zshrc</code> 文件：</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano ~/.zshrc</span><br></pre></td></tr></table></figure><p>如果你已经使用其他文本编辑器设置了默认编辑器，请将 “nano” 替换为你喜欢的编辑器名称。</p><ol start="3"><li>添加 nvm 配置：在打开的文件中，将以下配置粘贴到文件的末尾：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export NVM_DIR=&quot;$HOME/.nvm&quot;</span><br><span class="line">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm</span><br></pre></td></tr></table></figure><ol start="4"><li><p>保存并退出：按下 <code>Ctrl + X</code> 保存并退出编辑器。</p></li><li><p>重新加载 Zsh 配置：运行以下命令以使新的 Zsh 配置生效：</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure><ol start="6"><li>验证安装：最后，你可以通过运行以下命令来验证 nvm 是否正确安装：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm --version</span><br></pre></td></tr></table></figure><p>如果一切顺利，你应该看到 nvm 的版本号输出。</p><p>现在，你已经在 macOS 上的 Zsh 中成功配置了 nvm。你可以使用 nvm 命令来安装和管理不同版本的 Node.js。例如，要安装最新版本的 Node.js，可以运行 <code>nvm install node</code>。要切换使用不同的 Node.js 版本，可以使用 <code>nvm use &lt;version&gt;</code> 命令。更多关于 nvm 的使用方法，请参考官方文档。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://juejin.cn/post/6884433883421474829">Mac下安装NVM,并使用NVM安装Node(附带NPM)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是NVM&quot;&gt;&lt;a href=&quot;#什么是NVM&quot; class=&quot;headerlink&quot; title=&quot;什么是NVM&quot;&gt;&lt;/a&gt;什么是NVM&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Node.js Version Manager，用来管理 node 的版本。&lt;/p</summary>
      
    
    
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>遇到的一些面试题</title>
    <link href="http://example.com/posts/43142/"/>
    <id>http://example.com/posts/43142/</id>
    <published>2023-03-31T16:00:00.000Z</published>
    <updated>2023-06-11T15:38:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><p>略</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="具体介绍一下在公司的主要项目，在项目中的角色，在项目中遇到的难点"><a href="#具体介绍一下在公司的主要项目，在项目中的角色，在项目中遇到的难点" class="headerlink" title="具体介绍一下在公司的主要项目，在项目中的角色，在项目中遇到的难点"></a>具体介绍一下在公司的主要项目，在项目中的角色，在项目中遇到的难点</h3><h4 id="上一个项目或者做过的主要项目的简介"><a href="#上一个项目或者做过的主要项目的简介" class="headerlink" title="上一个项目或者做过的主要项目的简介"></a>上一个项目或者做过的主要项目的简介</h4><p>略</p><h4 id="前端工作，前端架构，后台交互"><a href="#前端工作，前端架构，后台交互" class="headerlink" title="前端工作，前端架构，后台交互"></a>前端工作，前端架构，后台交互</h4><p>略</p><h4 id="在项目中遇到的难点"><a href="#在项目中遇到的难点" class="headerlink" title="在项目中遇到的难点"></a>在项目中遇到的难点</h4><p>略</p><h3 id="promise"><a href="#promise" class="headerlink" title="promise"></a>promise</h3><p>1、promisel<br>2、Promise.all()<br>Promise.all() 方法接收一个 promise 的 iterable 类型（注：Array，Map，Set 都属于 ES6 的 iterable 类型）的输入，并且只返回一个Promise实例，那个输入的所有 promise 的 resolve 回调的结果是一个数组。这个Promise的 resolve 回调执行是在所有输入的 promise 的 resolve 回调都结束，或者输入的 iterable 里没有 promise 了的时候。它的 reject 回调执行时，只要任何一个输入的 promise 的 reject 回调执行或者输入不合法的 promise 就会立即抛出错误，并且 reject 的是第一个抛出的错误信息。<br>3、Promise.race()<br><code>Promise.race(iterable)</code> 方法返回一个 promise，一旦迭代器中的某个 promise 解决或拒绝，返回的 promise 就会解决或拒绝。<br>4、Promise.any()<br>接收一个 promise 对象的集合，当其中的任意一个 promise 成功，就返回那个成功的 promise 的值。</p><h4 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h4><p>关于promise的执行顺序，参考看<a href="https://blog.csdn.net/qq_41131745/article/details/126974598">这篇文章</a><br>1、有三个await在执行，其中第一个程序报错了后面还会执行吗？</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">func</span> = <span class="keyword">async</span>(<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">func1</span>();</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">func2</span>();</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">func3</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>答案： 不会，会在控制台报错并终止执行<br>2、如果想按顺序执行几个await，有什么办法<br>办法1 使用Promise.all()<br>办法2 使用for循环进行执行<br>3、根据上一个返回结果进行下一步操作<br>方法1 使用promise的链式结构<br>方法2 使用reduce</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// reduce() 方法为数组的每个值（从左到右）执行提供的函数。</span></span><br><span class="line"><span class="keyword">const</span> numbers = [<span class="number">175</span>, <span class="number">50</span>, <span class="number">25</span>];</span><br><span class="line"><span class="keyword">const</span> newNum = numbers.<span class="title function_">reduce</span>(<span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">myFunc</span>(<span class="params">total, num</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> ccc = <span class="keyword">await</span> http.<span class="title function_">request</span>()</span><br><span class="line">  <span class="keyword">return</span> ccc;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newNum)</span><br></pre></td></tr></table></figure><p>4、题目如下，打印结果为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>)</span><br><span class="line"><span class="comment">// 打印结果为 1 2 3</span></span><br></pre></td></tr></table></figure><p>原因：Promise 里面的函数会立即执行，因为 Promise 是同步的，而.then 是异步的</p><h3 id="react的底层原理"><a href="#react的底层原理" class="headerlink" title="react的底层原理"></a>react的底层原理</h3><p>对底层原理有稍微了解过，从不同的角度来讲每个人都有自己的理解<br>参考：<a href="https://zhuanlan.zhihu.com/p/101507773">https://zhuanlan.zhihu.com/p/101507773</a></p><h4 id="场景问题"><a href="#场景问题" class="headerlink" title="场景问题"></a>场景问题</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * useState定义一个变量count，</span></span><br><span class="line"><span class="comment"> * 用一个按钮点击后count+1，</span></span><br><span class="line"><span class="comment"> * useEffect里面写一个定时器，</span></span><br><span class="line"><span class="comment"> * 5s后进行一个打印，</span></span><br><span class="line"><span class="comment"> * 在组件初始化后点击按钮五次，打印的结果为？</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">ButttonCount</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [count, set_count] = <span class="title function_">useState</span>(<span class="number">0</span>)</span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title class_">Timer</span> = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;useEffect_count:&quot;</span>, count)</span><br><span class="line">      <span class="built_in">clearTimeout</span>(<span class="title class_">Timer</span>)</span><br><span class="line">    &#125;, <span class="number">5000</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">width:</span> &quot;<span class="attr">80px</span>&quot;, <span class="attr">height:</span> &quot;<span class="attr">40px</span>&quot;, <span class="attr">backgroundColor:</span> &quot;#<span class="attr">ccc</span>&quot; &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> set_count(count + 1)&#125;</span></span><br><span class="line"><span class="language-xml">    &gt;&#123;count&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>打印结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">useEffect_count: 0  // 执行了两次，为第一次组件渲染的结果</span><br><span class="line">useEffect_count: 1  // 第一次点击后的输出</span><br><span class="line">useEffect_count: 2  // 第二次点击后的输出</span><br><span class="line">useEffect_count: 3  // 第三次点击后的输出</span><br><span class="line">useEffect_count: 4  // 第四次点击后的输出</span><br><span class="line">useEffect_count: 5  // 第五次点击后的输出</span><br></pre></td></tr></table></figure><p>结果产生原因<br>由于useEffect中形成一个闭包，只会拿到初始执行的数据缓存起来，所以打印的结果是useEffect的函数执行时的数值。</p><h4 id="react事件机制"><a href="#react事件机制" class="headerlink" title="react事件机制"></a>react事件机制</h4><p>React并不是将click事件绑定到了div的真实DOM上，而是在document处监听了所有的事件，当事件发生并且冒泡到document处的时候，React将事件内容封装并交由真正的处理函数运行。这样的方式不仅仅减少了内存的消耗，还能在组件挂在销毁时统一订阅和移除事件。<br>除此之外，冒泡到 document上的事件也不是原生的浏览器事件，而是由react 自己实现的合成事件（SyntheticEvent）。因此如果不想要是事件冒泡的话应该调用event.preventDefault()方法，而不是调用 event.stopProppagation()方法。</p><h4 id="虚拟dom"><a href="#虚拟dom" class="headerlink" title="虚拟dom"></a>虚拟dom</h4><p>React中真实DOM的生成步骤：JSX -&gt; createElement方法 -&gt; JS对象(虚拟DOM) -&gt; 真实的DOM<br>因此可见，JSX中的div等标签仅仅是JSX的语法，并不是DOM，仅用于生成JS对象<br>虚拟DOM的优点：<br>1、性能提升 DOM比对变成了js的比对<br>2、它使得跨平台应用得以实现，React Native（安卓和ios中没有DOM的概念，使用虚拟DOM(js对象)在所有应用中都可以被使用，然后变成原生客户端的组件）</p><h4 id="react-diff原理"><a href="#react-diff原理" class="headerlink" title="react diff原理"></a>react diff原理</h4><p>1、Diff算法用于比较原始虚拟DOM和新的虚拟DOM的区别，即两个js对象该如何比对。<br>2、diff算法全称叫做difference算法<br>3、setState实际上是异步的，这是为了提升react底层的性能，是为了防止时间间隔很短的情况下多次改变state，React会在这种情况下将几次改变state合并成一次从而提高性能。<br>4、diff算法是同级比较，假设第一层两个虚拟DOM节点不一致，就不会往下比了，就会将原始页面虚拟DOM全部删除掉，然后用新的虚拟DOM进行全部的替换，虽然这有可能有一些性能的浪费，但是由于同层比对的算法性能很高，因此又弥补了性能的损耗。<br>5、做list循环的时候有一个key值，这样比对的时候就可以相对应的比对，找出要改变的，以及不需要渲染的，这样使用key做关联，极大的提升了虚拟DOM比对的性能，这要保证在新的虚拟DOM后key值不变，这就说明了为什么做list循环的时候key的值不要是index，因为这样没有办法保证原虚拟DOM和新虚拟DOM的key值一致性，而造成性能的损耗<b>即会产生性能问题</b>，一般这个key对应后台数据的唯一id字段，而不是循环的index。<b>(列表不推荐使用index作为key，为什么)</b></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">getTodoItem</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">list</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">item,index</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">TodoItem</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">key</span> = <span class="string">&#123;item&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">content</span>=<span class="string">&#123;item&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">index</span>=<span class="string">&#123;index&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">deleteItem</span> = <span class="string">&#123;this.handleItemDelete&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            /&gt;</span></span></span><br><span class="line">        )</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="react-调度原理"><a href="#react-调度原理" class="headerlink" title="react 调度原理"></a>react 调度原理</h4><h4 id="react-hooks原理"><a href="#react-hooks原理" class="headerlink" title="react hooks原理"></a>react hooks原理</h4><p>参考：<a href="https://segmentfault.com/a/1190000038768433#item-6">https://segmentfault.com/a/1190000038768433#item-6</a></p><p><b>useEffect</b></p><p>主要功能：<br>组件加载后执行创建函数，创建函数执行后会返回一个销毁函数，在组件销毁前执行。若依赖项为数组且不为空，则依赖项改变时，会执行上一个销毁函数和重新执行创建函数.useEffect直接被调用的过程是组件初始化和组件更新，其销毁函数被调用的过程是组件销毁。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useEffect(创建函数，依赖项)</span><br></pre></td></tr></table></figure><p>组件初始化：<br>1、生成一个effect对象，包含创建函数<br>2、缓存effect和依赖项<br>3、当React进入提交阶段，执行effect中的创建函数，获取销毁函数。若销毁函数不为空，则将其放入effect。<br>组件更新：<br>1、生成一个effect对象, 包含创建函数<br>2、检查已缓存effect中是否有销毁函数，有的话则放入新effect对象<br>3、缓存effect<br>4、若依赖项和已缓存依赖项不同，则将hasEffect标记添加到effect，并缓存新依赖项<br>5、当React进入提交阶段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if (effect有hasEffect标记) &#123;</span><br><span class="line">    若effect中有销毁函数，则先执行销毁函数</span><br><span class="line">    执行effect中的创建函数，获取销毁函数。若销毁函数不为空，则将其放入effect</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>组件销毁：若effect中有销毁函数，则执行。</p><p><b>useState</b></p><p>useState的功能是设置一个状态的初始值，并返回当前状态和设置状态的函数。useState直接被调用的过程也是组件初始化和组件更新，其还有一个调用设置状态函数的过程。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[状态，设置状态函数] = useState(初始状态)</span><br></pre></td></tr></table></figure><p>组件初始化：<br>1、若初始状态为函数，则将函数执行结果设为当前状态。否则将初始状态设为当前状态。<br>2、生成设置状态函数<br>3、缓存当前状态和设置状态函数<br>4、返回当前状态<br>组件更新：<br>1、读取缓存状态和设置状态函数<br>2、返回缓存状态<br>执行设置状态函数：<br>1、更新缓存状态<br>2、触发React组件树更新<br>3、在下一次组件更新时，将返回已被更新的缓存状态</p><p><b>useReducer</b></p><p>useReducer的功能和原理与useState一致，区别在于useReducer使用函数管理状态，使用派发动作指令函数作为设置状态函数。Reducer概念可参看redux。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[状态，派发动作指令函数]=useReducer(reducer函数，初始状态)</span><br></pre></td></tr></table></figure><p><b>useRef</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;current: 当前值&#125; = useRef(初始当前值)</span><br></pre></td></tr></table></figure><p>useRef的功能是生成一个对象，结构是：{current: 当前值}, 对象一旦初始化，不会因为组件更新而改变，即不会触发重新渲染。</p><h3 id="用过哪些中间件（koa、express、egg）"><a href="#用过哪些中间件（koa、express、egg）" class="headerlink" title="用过哪些中间件（koa、express、egg）"></a>用过哪些中间件（koa、express、egg）</h3><h4 id="什么是中间件"><a href="#什么是中间件" class="headerlink" title="什么是中间件"></a>什么是中间件</h4><p>处理 Web 请求时，我们常常需要进行验证请求来源、检查登录状态、确定是否有足够权限、打印日志等操作，而这些重复的操作如果写在具体的路由处理函数中，明显会导致代码冗余，这个时候，我们就可以将这些通用的流程抽象为中间件函数，减少重复代码。<br>我们可以将 Web 请求想象为一条串联的管道，在管道中有多个关卡，请求数据由源头起，依次流过各关卡，每个关卡独立运作，既可以直接响应数据，又可以对请求稍作调整，并使之流向下一关卡，这个关卡，就是中间件。<br><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/3/5/1694e7a5ecfc5a49~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp" alt="中间件模型"></p><h4 id="koa"><a href="#koa" class="headerlink" title="koa"></a>koa</h4><p>参考：<a href="https://juejin.cn/post/7022626279048347679#heading-11">https://juejin.cn/post/7022626279048347679#heading-11</a><br>sass端项目有使用到koa，但是pass端没有使用到，但是有了解过koa的实现模式。<br>Koa 实现了基于洋葱模型的中间件，在处理请求时，总是从外层中间件开始，到最内层，最后回到最外层。</p><h3 id="http协议、http缓存、http版本、浏览器请求上限、跨域"><a href="#http协议、http缓存、http版本、浏览器请求上限、跨域" class="headerlink" title="http协议、http缓存、http版本、浏览器请求上限、跨域"></a>http协议、http缓存、http版本、浏览器请求上限、跨域</h3><p>参考：<a href="https://juejin.cn/post/6844903844216832007#heading-22">https://juejin.cn/post/6844903844216832007#heading-22</a></p><h4 id="TCP-x2F-IP-协议"><a href="#TCP-x2F-IP-协议" class="headerlink" title="TCP&#x2F;IP 协议"></a>TCP&#x2F;IP 协议</h4><p>应用层：应用层规定了向用户提供应用服务时通信的协议<br>传输层：传输层对接上层应用层，提供处于网络连接中两台计算机之间的数据传输所使用的协议<br>网络层：网络层规定了数据通过怎样的传输路线到达对方计算机传送给对方（IP协议等）<br>链路层：用来处理连接网络的硬件部分，包括控制操作系统、硬件的设备驱动、网卡及光纤等物理可见部分<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/54306aa1f19744eca94f862a89b310ef~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt="通信传输流"></p><h4 id="TCP和UDP的区别"><a href="#TCP和UDP的区别" class="headerlink" title="TCP和UDP的区别"></a>TCP和UDP的区别</h4><p>1、TCP协议是全双工的，即发送数据和接收数据是同步进行的，就好像我们打电话一样，说话的同时也能听见。<br>2、TCP协议在建立和断开连接时有三次握手和四次挥手，因此在传输的过程中更稳定可靠但同时就没UDP那么高效了。<br>3、UDP协议是面向无连接的，也就是说在正式传递数据之前不需要先建立连接。<br>4、UDP 协议不保证有序且不丢失的传递到对端，也就是说不够稳定，但也正因如此，UDP协议比TCP更加高效和轻便。</p><h4 id="http-x2F-https"><a href="#http-x2F-https" class="headerlink" title="http&#x2F;https"></a>http&#x2F;https</h4><ul><li>http<br>1、HTTP协议定义Web客户端如何从Web服务器请求Web页面，以及服务器如何把Web页面传送给客户端。<br>2、HTTP协议采用了请求&#x2F;响应模型。<br>3、客户端向服务器发送一个请求报文，请求报文包含请求的方法、URL、协议版本、请求头部和请求数据。<br>4、服务器以一个状态行作为响应，响应的内容包括协议的版本、成功或者错误代码、服务器信息、响应头部和响应数据。</li><li>https<br>HTTPS基于HTTP协议，通过SSL或TLS（可以看作SSL3.0）提供加密处理数据、验证对方身份以及数据完整性保护，特点如下：<br>1、内容加密：采用混合加密技术，中间者无法直接查看明文内容<br>2、验证身份：通过证书认证客户端访问的是自己的服务器<br>3、保护数据完整性：防止传输的内容被中间人冒充或者篡改</li><li>http和https的主要区别<br>1、HTTPS协议需要到CA（证书颁发机构）申请证书，一般免费证书很少，需要交费。<br>2、HTTP协议运行在TCP之上，所有传输的内容都是明文，HTTPS运行在SSL&#x2F;TLS之上，SSL&#x2F;TLS运行在TCP之上，所有传输的内容都经过加密的。<br>3、HTTP和HTTPS使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。<br>4、http的连接很简单，是无状态的；HTTPS协议是由HTTP+SSL协议构建的可进行加密传输、身份认证的网络协议，可以有效的防止运营商劫持，解决了防劫持的一个大问题，较http协议安全。</li></ul><h4 id="http版本"><a href="#http版本" class="headerlink" title="http版本"></a>http版本</h4><ul><li>http1.0<br>最早的http只是使用在一些较为简单的网页上和网络请求上，所以比较简单，每次请求都打开一个新的TCP链接，收到响应之后立即断开连接。</li><li>http1.1<br>1、HTTP&#x2F;1.1 引入了更多的缓存控制策略，如Entity tag，If-Unmodified-Since, If-Match, If-None-Match等<br>2、HTTP&#x2F;1.1 允许范围请求，即在请求头中加入Range头部<br>3、HTTP&#x2F;1.1 的请求消息和响应消息都必须包含Host头部，以区分同一个物理主机中的不同虚拟主机的域名<br>4、HTTP&#x2F;1.1 默认开启持久连接，在一个TCP连接上可以传送多个HTTP请求和响应，减少了建立和关闭连接的消耗和延迟。</li><li>http2.0<br>1、新的二进制格式： HTTP&#x2F;1.x的解析是基于文本的。基于文本协议的解析存在天然缺陷，文本的表现形式有多样性，要做到全面性考虑的场景必然很多。二进制则不同，只识别0和1的组合。基于这种考虑HTTP&#x2F;2.0的协议解析采用二进制格式，方便且强大。<br>2、多路复用： HTTP&#x2F;2.0支持多路复用，这是HTTP&#x2F;1.1持久连接的升级版。多路复用，就是在一个 TCP 连接中可以存在多条流，也就是可以发送多个请求，服务端则可以通过帧中的标识知道该帧属于哪个流（即请求），通过重新排序还原请求。多路复用允许并发的发起多个请求，每个请求及该请求的响应不需要等待其他的请求或响应，避免了线头阻塞问题。这样某个请求任务耗时严重，不会影响到其它连接的正常执行,极大的提高传输性能。<br>3、头部压缩： HTTP&#x2F;1.x的请求和响应头部带有大量信息，而且每次请求都要重复发送，HTTP&#x2F;2.0使用encoder来减少需要传输的头部大小，通讯双方各自cache一份头部 fields表，既避免了重复头部的传输，又减小了需要传输的大小。<br>4、服务端推送： 这里的服务端推送指把客户端所需要的css&#x2F;js&#x2F;img资源伴随着index.html一起发送到客户端，省去了客户端重复请求的步骤（从缓存中取）。</li><li>http3.0<br>Google 基于 UDP 协议推出了一个的 QUIC 协议，并且使用在了 HTTP&#x2F;3 上。<br>QUIC 基于 UDP，但是UDP本身存在不稳定性等诸多问题，所以QUIC在UDP的基础上新增了很多功能，比如多路复用、0-RTT、使用 TLS1.3 加密、流量控制、有序交付、重传等等功能。优点诸多，参考这里：<br>1、避免包阻塞： 多个流的数据包在TCP连接上传输时，若一个流中的数据包传输出现问题，TCP需要等待该包重传后，才能继续传输其它流的数据包。但在基于UDP的QUIC协议中，不同的流之间的数据传输真正实现了相互独立互不干扰，某个流的数据包在出问题需要重传时，并不会对其他流的数据包传输产生影响。<br>2、快速重启会话： 普通基于tcp的连接，是基于两端的ip和端口和协议来建立的。在网络切换场景，例如手机端切换了无线网，使用4G网络，会改变本身的ip，这就导致tcp连接必须重新创建。而QUIC协议使用特有的UUID来标记每一次连接，在网络环境发生变化的时候，只要UUID不变，就能不需要握手，继续传输数据。</li></ul><h4 id="浏览器请求上限"><a href="#浏览器请求上限" class="headerlink" title="浏览器请求上限"></a>浏览器请求上限</h4><p>浏览器请求上限 chrome、Firefox、ie8都是6，opera、Safari都是4<br>1、Http get方法提交的数据大小长度并没有限制，Http协议规范没有对URL长度进行限制。<br>目前说的get长度有限制，是特定的浏览器及服务器对它的限制。各种浏览器和服务器的最大处理能力如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">IE：对URL的最大限制为2083个字符，若超出这个数字，提交按钮没有任何反应。</span><br><span class="line">Firefox：对Firefox浏览器URL的长度限制为：65536个字符。</span><br><span class="line">Safari：URL最大长度限制为80000个字符。</span><br><span class="line">Opera：URL最大长度限制为190000个字符。</span><br><span class="line">Google(chrome)：URL最大长度限制为8182个字符。</span><br><span class="line">Apache(Server)：能接受的最大url长度为8192个字符（这个准确度待定？？？）</span><br><span class="line">Microsoft Internet Information Server(IIS)：n能接受最大url的长度为16384个字符。</span><br></pre></td></tr></table></figure><p>2、理论上讲，post是没有大小限制的。Http协议规范也没有进行大小限制，起限制作用的是服务器处理程序的处理能力。<br>Tomcat下默认post长度为2M，可通过修改conf&#x2F;server.xml中的“maxPostSize&#x3D;0”来取消对post大小的限制。</p><h4 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h4><p>由于浏览器的同源策略影响，协议、域名、端口号不同就会产生跨域问题<br>解决方案<br>1、反向代理解决跨域问题<br>2、jsonP<br>3、后端去解决</p><h3 id="前端优化"><a href="#前端优化" class="headerlink" title="前端优化"></a>前端优化</h3><ul><li>高内聚低耦合</li><li>减少HTTP的请求次数和大小<br>因为HTTP的并发性、TCP的三握四挥、网络通道可能会被阻塞等众多原因，决定了HTTP请求次数越少越好</li><li>图片、音视频资源懒加载&#x2F;预加载<br>1、第一次渲染页面不去加载真实图片(页面中基于默认图占位)<br>2、使用字体图标&#x2F;SVG(矢量图)代替位图(jpg&#x2F;png&#x2F;gif…)</li><li>列表、表格数据分页<br>1、列表、表格数据请求进行分页（数字分页或滚动加载分页）<br>2、数据的分页加载、异步加载、下拉加载</li><li>条件语句优化<br>1、对嵌套代码进行优化，减少嵌套层数<br>2、多条条件语句提前return，或者使用switch进行break</li><li>第三方库按需引入<br>按需引入，咱们使用的一些第三方库可以通过按需引入的方式加载。避免引入不需要使用的部分，无端增加项目体积。</li></ul><h3 id="前端安全"><a href="#前端安全" class="headerlink" title="前端安全"></a>前端安全</h3><h4 id="XSS攻击"><a href="#XSS攻击" class="headerlink" title="XSS攻击"></a>XSS攻击</h4><p>XSS 攻击全称跨站脚本攻击，是利用html可以执行script标签的特性，（比如我在这里加了一段下面的代码<script>alert("一段js代码，可用在本站做脚本攻击")</script>）想尽办法将脚本注入页面中的攻击手段。XSS攻击有两种，一种是通过修改浏览器URL导致脚本被注入到页面，另一种是通过输入框将脚本代码注入数据库。前面一种会被chrome浏览器自动防御攻击（但最好还是手动也防御一下），后面一种则需要我们手动防御。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="string">&quot;一段js代码，可用在本站做脚本攻击&quot;</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="CSRF-攻击"><a href="#CSRF-攻击" class="headerlink" title="CSRF 攻击"></a>CSRF 攻击</h4><p>CSRF中文名为跨站请求伪造。攻击是源于Web的隐式身份验证机制！Web的身份验证机制虽然可以保证一个请求是来自于某个用户的浏览器，但却无法保证该请求是用户批准发送的。CSRF攻击的问题一般是由服务端解决，防范 CSRF 攻击可以遵循以下几种规则：<br>1、Get 请求不用于对数据进行修改<br>2、Cookie设置HTTP Only<br>3、接口设置禁止跨域<br>4、请求时附带验证信息，比如验证码或者 Token</p><h3 id="个人开发习惯"><a href="#个人开发习惯" class="headerlink" title="个人开发习惯"></a>个人开发习惯</h3><p>1、一个方法只做一件事情、把代码最大程度的拆分<br>2、尽量精简代码<br>3、一个函数或方法只做一件事情（提升代码能力）</p><h3 id="移动端开发"><a href="#移动端开发" class="headerlink" title="移动端开发"></a>移动端开发</h3><p>React Native、flutter、taro（ui框架）？</p><h3 id="es6"><a href="#es6" class="headerlink" title="es6"></a>es6</h3><h4 id="let、const"><a href="#let、const" class="headerlink" title="let、const"></a>let、const</h4><h4 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h4><h4 id="拓展运算符"><a href="#拓展运算符" class="headerlink" title="拓展运算符"></a>拓展运算符</h4><h4 id="模版字符串"><a href="#模版字符串" class="headerlink" title="模版字符串"></a>模版字符串</h4><h3 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h3><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><h3 id="状态管理"><a href="#状态管理" class="headerlink" title="状态管理"></a>状态管理</h3><h4 id="mobx"><a href="#mobx" class="headerlink" title="mobx"></a>mobx</h4><p><a href="https://zhuanlan.zhihu.com/p/369430688">https://zhuanlan.zhihu.com/p/369430688</a></p><h2 id="我要问的问题"><a href="#我要问的问题" class="headerlink" title="我要问的问题"></a>我要问的问题</h2><p>公司业务大致有哪些，<br>面试结果什么时候出，<br>公司有没有用阿米巴。<br>多久转正，多久提一次薪，<br>公司会经常使用新的技术吗</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;自我介绍&quot;&gt;&lt;a href=&quot;#自我介绍&quot; class=&quot;headerlink&quot; title=&quot;自我介绍&quot;&gt;&lt;/a&gt;自我介绍&lt;/h2&gt;&lt;p&gt;略&lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;</summary>
      
    
    
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>flutter的一些东西</title>
    <link href="http://example.com/posts/34928/"/>
    <id>http://example.com/posts/34928/</id>
    <published>2023-03-14T16:00:00.000Z</published>
    <updated>2023-06-11T15:37:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装和配置"><a href="#安装和配置" class="headerlink" title="安装和配置"></a>安装和配置</h2><h3 id="在-macOS-上安装和配置-Flutter-开发环境"><a href="#在-macOS-上安装和配置-Flutter-开发环境" class="headerlink" title="在 macOS 上安装和配置 Flutter 开发环境"></a><a href="https://flutter.cn/docs/get-started/install/macos#update-your-path">在 macOS 上安装和配置 Flutter 开发环境</a></h3><h2 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h2><h3 id="创建flutter项目时报错"><a href="#创建flutter项目时报错" class="headerlink" title="创建flutter项目时报错"></a>创建flutter项目时报错</h3><p>创建项目时报以下错误<br><code>Invalid module name: &#39;projectName&#39; - must be a valid Dart package name (lower_case_with_underscores)</code><br>问题原因是：创建Flutter项目的根目录不能有大写，项目名改小写就ok了。</p><h3 id="Flutter报错-command-not-found-flutter"><a href="#Flutter报错-command-not-found-flutter" class="headerlink" title="Flutter报错 - command not found: flutter"></a>Flutter报错 - command not found: flutter</h3><p>1 、在终端执行：<code>open ~/.zshrc</code></p><p>2 、如果 提示文件不存在，执行 <code>open ~/.bash_profile</code> 在 bash_profile 中配置以下内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PUB_HOSTED_URL=https://pub.flutter-io.cn</span><br><span class="line"><span class="built_in">export</span> FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</span><br><span class="line"><span class="built_in">export</span> PATH=[flutter安装路径]/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>3 、执行：<code>vim ~/.zshrc</code> 新建一个新文件，并copy刚刚配置的内容到 zshrc 文件中，退出编辑模式 <code>:wq!</code> 回车保存。</p><p>4 、使用source命令重新加载一下：<code>source ~/.zshrc</code> ，下次再编辑这个文件就可以直接执行：<code>open ~/.zshrc</code></p><p>6 、运行 <code>flutter -h</code> 看生效没有</p><h3 id="项目运行时报错"><a href="#项目运行时报错" class="headerlink" title="项目运行时报错"></a>项目运行时报错</h3><p>项目在运行时候报错以下错误，通常因为是新加了依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Error: Cannot run with sound null safety, because the following dependencies don<span class="string">&#x27;t support null safety:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> - package: XXX</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For solutions, see https://dart.dev/go/unsound-null-safety</span></span><br></pre></td></tr></table></figure><p>解决办法如下：</p><p>1 、在AndroidStudio的顶部工作栏-&gt;Run-&gt;Edit Configurations<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202303311742295.png" alt="Edit Configurations"><br>2 、在Additional run args 填入命令：–no-sound-null-safety<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202303311744416.png"><br>3 、点击OK后再运行就不会报错了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装和配置&quot;&gt;&lt;a href=&quot;#安装和配置&quot; class=&quot;headerlink&quot; title=&quot;安装和配置&quot;&gt;&lt;/a&gt;安装和配置&lt;/h2&gt;&lt;h3 id=&quot;在-macOS-上安装和配置-Flutter-开发环境&quot;&gt;&lt;a href=&quot;#在-macOS-上安装和配置</summary>
      
    
    
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>MacOS双系统占地方？装移动硬盘上试试</title>
    <link href="http://example.com/posts/35462/"/>
    <id>http://example.com/posts/35462/</id>
    <published>2023-03-01T16:00:00.000Z</published>
    <updated>2023-06-11T15:38:06.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>因为 MacOS和 Windows在系统使用上有很多不同的地方，所以很多喜欢MacOS但又不得不使用Windows的都选择在电脑上安装双系统，这样就使得寸土寸金的系统空间就显得有些捉襟见肘了。于是乎，便产生了把windows系统装进移动硬盘里的想法，不占用电脑的存储空间，又可以使用电脑的硬件，岂不是美滋滋？说干就干。</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="移动硬盘"><a href="#移动硬盘" class="headerlink" title="移动硬盘"></a>移动硬盘</h4><ul><li>分区（如果土豪或者已经分好区的直接下一步）<br>在磁盘工具中选择显示所有设备后点击抹掉，格式选择<b>Mac OS拓展(日志式)</b>方案选择<b></b>GUID分区图</b>的方案抹掉移动硬盘。<br>点击分区后点击<b>“+”</b>进行分区，格式选择<b>Mac OS拓展（日志式）</b>自己设置合适的大小后点击应用。<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202304131716649.png" alt="步骤1、2、3"><br><font color="#dd0000">注：如果要设置其他格式，需要在分区完之后再自行进行抹掉设置。</font></li><li>修改硬盘格式<br>选择要修改格式的区域进行抹掉，抹掉前选择格式，这里选的是<b>Windows NT 文件系统 (Tuxera NTFS)</b></li></ul><h4 id="windows10系统"><a href="#windows10系统" class="headerlink" title="windows10系统"></a>windows10系统</h4><ul><li>需要下载win10的景象，可到<a href="https://msdn.itellyou.cn/">MSDN</a>自行下载需要的合适版本。</li><li>需要一个windows10的环境，建议在win笔记本上操作或者先安装一个双系统，因为在虚拟机上会有一些问题不方便解决</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;因为 MacOS和 Windows在系统使用上有很多不同的地方，所以很多喜欢MacOS但又不得不使用Windows的都选择在电脑上安装双系统</summary>
      
    
    
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>破解版的wechat？</title>
    <link href="http://example.com/posts/45715/"/>
    <id>http://example.com/posts/45715/</id>
    <published>2023-02-01T16:00:00.000Z</published>
    <updated>2023-06-11T15:35:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows版本"><a href="#Windows版本" class="headerlink" title="Windows版本"></a>Windows版本</h2><p><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209212251235.png" alt="如同所示"><br>主要支持防撤回和微信多开，具体可以自己去发掘！<a href="https://github.com/huiyadanli/RevokeMsgPatcher">GitHub直达</a>  </p><h2 id="MacOS版本"><a href="#MacOS版本" class="headerlink" title="MacOS版本"></a>MacOS版本</h2><p><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209212253368.png" alt="如同所示"><br>支持很多功能，如下：</p><ul><li>迷离&#x2F;黑夜&#x2F;上帝&#x2F;少女 皮肤模式</li><li>僵尸粉检测</li><li>手机端也能收到被撤回的消息</li><li>消息转发</li><li>免认证登录与多开</li><li>同时支持自定义回复和AI自动撩妹</li><li>显示小程序详情</li><li>退群监控</li><li>群员监控<br>具体可以去主页发掘，<a href="https://github.com/MustangYM/WeChatExtension-ForMac">GitHub直达</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Windows版本&quot;&gt;&lt;a href=&quot;#Windows版本&quot; class=&quot;headerlink&quot; title=&quot;Windows版本&quot;&gt;&lt;/a&gt;Windows版本&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://chinyan.oss-cn-hangzhou.</summary>
      
    
    
    
    
    <category term="实用" scheme="http://example.com/tags/%E5%AE%9E%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Navicat设置中文</title>
    <link href="http://example.com/posts/24810/"/>
    <id>http://example.com/posts/24810/</id>
    <published>2023-01-21T16:00:00.000Z</published>
    <updated>2023-06-15T15:36:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Naviact全英文看不懂？那就把它设置成中文"><a href="#Naviact全英文看不懂？那就把它设置成中文" class="headerlink" title="Naviact全英文看不懂？那就把它设置成中文"></a>Naviact全英文看不懂？那就把它设置成中文</h2><h3 id="下载中文包"><a href="#下载中文包" class="headerlink" title="下载中文包"></a>下载中文包</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Naviact全英文看不懂？那就把它设置成中文&quot;&gt;&lt;a href=&quot;#Naviact全英文看不懂？那就把它设置成中文&quot; class=&quot;headerlink&quot; title=&quot;Naviact全英文看不懂？那就把它设置成中文&quot;&gt;&lt;/a&gt;Naviact全英文看不懂？那就把</summary>
      
    
    
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>图库</title>
    <link href="http://example.com/posts/1/"/>
    <id>http://example.com/posts/1/</id>
    <published>2022-12-26T16:00:00.000Z</published>
    <updated>2023-06-11T15:32:49.000Z</updated>
    
    <content type="html"><![CDATA[<div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202302172258128.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁紙</div>  <p>一些不错的壁紙</p>  <a href='/../image/wallpaper'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202302172159364.webp' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">图片</div>  <p>各种各样的图片</p>  <a href='/../image/photo'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209012258483.GIF' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">GIF</div>  <p>会动的动态图</p>  <a href='/../image/gif'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209212214430.JPG' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">表情包</div>  <p>奇奇怪怪的表情包</p>  <a href='/../image/emoticon'></a>  </figcaption>  </figure>  </div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;gallery-group-main&quot;&gt;

  &lt;figure class=&quot;gallery-group&quot;&gt;
  &lt;img class=&quot;gallery-group-img no-lightbox&quot; src=&#39;https://chinyan.oss-cn-</summary>
      
    
    
    
    
    <category term="图库" scheme="http://example.com/tags/%E5%9B%BE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>前端常见面试题</title>
    <link href="http://example.com/posts/6386/"/>
    <id>http://example.com/posts/6386/</id>
    <published>2022-12-11T16:00:00.000Z</published>
    <updated>2023-06-11T15:37:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前端常见面试题归纳和总结"><a href="#前端常见面试题归纳和总结" class="headerlink" title="前端常见面试题归纳和总结"></a>前端常见面试题归纳和总结</h1><h2 id="HTML-amp-CSS"><a href="#HTML-amp-CSS" class="headerlink" title="HTML&amp;CSS"></a>HTML&amp;CSS</h2><h3 id="浏览器内核"><a href="#浏览器内核" class="headerlink" title="浏览器内核"></a>浏览器内核</h3><p>常用五大浏览器及其内核</p><table><thead><tr><th align="center">浏览器</th><th align="center">内核</th></tr></thead><tbody><tr><td align="center">Google Chrome</td><td align="center">Blink引擎</td></tr><tr><td align="center">Mozilla Firefox</td><td align="center">Gecko引擎</td></tr><tr><td align="center">Apple Safari</td><td align="center">Webkit引擎</td></tr><tr><td align="center">Microsoft Edge</td><td align="center">Blink引擎</td></tr><tr><td align="center">Opera</td><td align="center">Blink引擎</td></tr><tr><td align="center">IE(已被历史所淘汰)</td><td align="center">Trident(俗称IE内核)</td></tr></tbody></table><h3 id="盒模型、flex布局、两-x2F-三栏布局、水平-x2F-垂直居中；"><a href="#盒模型、flex布局、两-x2F-三栏布局、水平-x2F-垂直居中；" class="headerlink" title="盒模型、flex布局、两&#x2F;三栏布局、水平&#x2F;垂直居中；"></a>盒模型、flex布局、两&#x2F;三栏布局、水平&#x2F;垂直居中；</h3><h3 id="BFC、清除浮动；"><a href="#BFC、清除浮动；" class="headerlink" title="BFC、清除浮动；"></a>BFC、清除浮动；</h3><h3 id="css3动画、H5新特性。"><a href="#css3动画、H5新特性。" class="headerlink" title="css3动画、H5新特性。"></a>css3动画、H5新特性。</h3><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><blockquote><p>开始之前我们先来看一道面试题，请回答一下打印的结果</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">debugger</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line">    &#125;, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            i == <span class="number">9999</span> &amp;&amp; <span class="title function_">resolve</span>()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span>);</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">5</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">6</span>)).<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">7</span>))</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">8</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">test</span>()</span><br></pre></td></tr></table></figure><p>答案是： <span class="hide-inline"><button type="button" class="hide-button" style="">查看答案  </button><span class="hide-content">2 3 4 6 5 1</span></span>  想一下为什么会得到这样的结果吧！</p><h3 id="继承、原型链、this指向、设计模式、call-apply-bind；"><a href="#继承、原型链、this指向、设计模式、call-apply-bind；" class="headerlink" title="继承、原型链、this指向、设计模式、call, apply, bind；"></a>继承、原型链、this指向、设计模式、call, apply, bind；</h3><h4 id="继承与原型链"><a href="#继承与原型链" class="headerlink" title="继承与原型链"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain">继承与原型链</a></h4><blockquote><p>当谈到继承时，JavaScript 只有一种结构：对象。每个实例对象（object）都有一个私有属性（称之为 __proto__）指向它的构造函数的原型对象（prototype）。该原型对象也有一个自己的原型对象（__proto__），层层向上直到一个对象的原型对象为 null。根据定义，null 没有原型，并作为这个原型链中的最后一个环节。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 让我们创建一个函数 f，它自身拥有属性 a 和 b</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">a</span> = <span class="number">1</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">b</span> = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 实例化 f 并赋给 o</span></span><br><span class="line"><span class="keyword">let</span> o = <span class="keyword">new</span> <span class="title function_">f</span>(); <span class="comment">// 打印o输出 &#123;a: 1, b: 2&#125;</span></span><br><span class="line"><span class="comment">// 在 f 函数的原型上定义属性</span></span><br><span class="line">f.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">b</span> = <span class="number">3</span>;</span><br><span class="line">f.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">c</span> = <span class="number">4</span>;</span><br><span class="line"><span class="comment">// 注：不要在 f 函数的原型上直接定义 f.prototype = &#123;b:3,c:4&#125;;这样会直接打破原型链</span></span><br><span class="line"><span class="comment">// 打印o会看到</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">a</span>: <span class="number">1</span></span><br><span class="line">        <span class="attr">b</span>: <span class="number">2</span></span><br><span class="line">        [[<span class="title class_">Prototype</span>]]: <span class="title class_">Object</span></span><br><span class="line">            <span class="attr">b</span>: <span class="number">3</span></span><br><span class="line">            <span class="attr">c</span>: <span class="number">4</span></span><br><span class="line">            <span class="attr">constructor</span>: ƒ <span class="title function_">f</span>()</span><br><span class="line">            [[<span class="title class_">Prototype</span>]]: <span class="title class_">Object</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 可以看到 o.[[Prototype]] 中有属性 b 和 c，其实也就等同于 o.__proto__ 或者 o.constructor.prototype</span></span><br><span class="line"><span class="comment">// 最后 o.[[Prototype]].[[Prototype]].[[Prototype]] 是 null</span></span><br><span class="line"><span class="comment">// null 是原型链的末尾，也就是这个原型链中的最后一个环节，根据定义，null 就是没有 [[Prototype]]。</span></span><br><span class="line"><span class="comment">// 综上，整个原型链如下：</span></span><br><span class="line"><span class="comment">// &#123;a:1, b:2&#125; ---&gt; &#123;b:3, c:4&#125; ---&gt; Object.prototype---&gt; null</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o.<span class="property">a</span>, o.<span class="property">b</span>); <span class="comment">// 1, 2</span></span><br><span class="line"><span class="comment">// a 和 b 都是 o 的自身属性，而原型上也有一个&#x27;b&#x27;属性，但是它不会被访问到。这种情况被称为 &quot;属性遮蔽 (property shadowing)&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o.<span class="property">c</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="comment">// c 并非 o 的自身属性，而是 o.[[Prototype]] 上的属性</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o.<span class="property">d</span>); <span class="comment">// undefined</span></span><br><span class="line"><span class="comment">// 可知 d 既不是 o 的自身属性也不是 o.[[Prototype]] 的属性，o.[[Prototype]].[[Prototype]] 为 null，原型上也没有 d 属性，即返回 undefined</span></span><br></pre></td></tr></table></figure><p>继承方法，当继承的函数被调用时，this 指向的是当前继承的对象，而不是继承的函数所在的原型对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> o = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">m</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">a</span> + <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o.<span class="title function_">m</span>()); <span class="comment">// 3，当调用 o.m 时，&#x27;this&#x27; 指向了 o.</span></span><br><span class="line"><span class="keyword">var</span> p = <span class="title class_">Object</span>.<span class="title function_">create</span>(o);   <span class="comment">// p 是一个继承自 o 的对象</span></span><br><span class="line">p.<span class="property">a</span> = <span class="number">4</span>; <span class="comment">// 创建 p 的自身属性 &#x27;a&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="title function_">m</span>()); <span class="comment">// 5</span></span><br><span class="line"><span class="comment">// 调用 p.m 时，&#x27;this&#x27; 指向了 p，又因为 p 继承了 o 的 m 函数，所以，此时的 &#x27;this.a&#x27; 即 p.a，就是 p 的自身属性 &#x27;a&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="this指向"><a href="#this指向" class="headerlink" title="this指向"></a>this指向</h4><h3 id="new实现、防抖节流、let-var-const-区别、暂时性死区、event、loop；"><a href="#new实现、防抖节流、let-var-const-区别、暂时性死区、event、loop；" class="headerlink" title="new实现、防抖节流、let, var, const 区别、暂时性死区、event、loop；"></a>new实现、防抖节流、let, var, const 区别、暂时性死区、event、loop；</h3><h4 id="new的时候都做了什么"><a href="#new的时候都做了什么" class="headerlink" title="new的时候都做了什么"></a>new的时候都做了什么</h4><p>new 关键字会进行如下的操作：<br>1、创建一个空的简单 JavaScript 对象（即 {}）；<br>2、为步骤 1 新创建的对象添加属性 __proto__，将该属性链接至构造函数的原型对象；<br>3、将步骤 1 新创建的对象作为 this 的上下文；<br>4、如果该函数没有返回对象，则返回 this。</p><h3 id="promise使用及实现、promise并行执行和顺序执行；"><a href="#promise使用及实现、promise并行执行和顺序执行；" class="headerlink" title="promise使用及实现、promise并行执行和顺序执行；"></a>promise使用及实现、promise并行执行和顺序执行；</h3><p>Promise 一共有三种状态，而其必然处于以下三种状态之一：<br>待定（pending），初始状态，既没有被兑现，也没有被拒绝；<br>已兑现（fulfilled），意味着操作成功完成；<br>已拒绝（rejected），意味着操作失败。</p><p>传递到 then() 中的函数被置入到一个微任务队列中，而不是立即执行，这意味着它是在 JavaScript 事件队列的所有运行时结束了，且事件队列被清空之后，才开始执行：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">wait</span> = ms =&gt; <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, ms));</span><br><span class="line"><span class="title function_">wait</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span>));</span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>)).<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>); <span class="comment">// 1, 2, 3, 4</span></span><br></pre></td></tr></table></figure><h3 id="async-x2F-await的优缺点；"><a href="#async-x2F-await的优缺点；" class="headerlink" title="async&#x2F;await的优缺点；"></a>async&#x2F;await的优缺点；</h3><h3 id="闭包、垃圾回收和内存泄漏、数组方法、数组乱序-数组扁平化、事件委托、事件监听、事件模型"><a href="#闭包、垃圾回收和内存泄漏、数组方法、数组乱序-数组扁平化、事件委托、事件监听、事件模型" class="headerlink" title="闭包、垃圾回收和内存泄漏、数组方法、数组乱序, 数组扁平化、事件委托、事件监听、事件模型"></a>闭包、垃圾回收和内存泄漏、数组方法、数组乱序, 数组扁平化、事件委托、事件监听、事件模型</h3><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><h3 id="HTTP1-HTTP2-HTTPS、常见的http状态码；"><a href="#HTTP1-HTTP2-HTTPS、常见的http状态码；" class="headerlink" title="HTTP1, HTTP2, HTTPS、常见的http状态码；"></a>HTTP1, HTTP2, HTTPS、常见的http状态码；</h3><h3 id="浏览从输入网址到回车发生了什么；"><a href="#浏览从输入网址到回车发生了什么；" class="headerlink" title="浏览从输入网址到回车发生了什么；"></a>浏览从输入网址到回车发生了什么；</h3><h3 id="前端安全（CSRF、XSS）"><a href="#前端安全（CSRF、XSS）" class="headerlink" title="前端安全（CSRF、XSS）"></a>前端安全（CSRF、XSS）</h3><h3 id="前端跨域、浏览器缓存、cookie-session-token-localstorage-sessionstorage；"><a href="#前端跨域、浏览器缓存、cookie-session-token-localstorage-sessionstorage；" class="headerlink" title="前端跨域、浏览器缓存、cookie, session, token, localstorage, sessionstorage；"></a>前端跨域、浏览器缓存、cookie, session, token, localstorage, sessionstorage；</h3><h3 id="TCP连接-三次握手-四次挥手"><a href="#TCP连接-三次握手-四次挥手" class="headerlink" title="TCP连接(三次握手, 四次挥手)"></a>TCP连接(三次握手, 四次挥手)</h3><h2 id="性能相关"><a href="#性能相关" class="headerlink" title="性能相关"></a>性能相关</h2><h3 id="图片优化的方式"><a href="#图片优化的方式" class="headerlink" title="图片优化的方式"></a>图片优化的方式</h3><h3 id="500-张图片，如何实现预加载优化"><a href="#500-张图片，如何实现预加载优化" class="headerlink" title="500 张图片，如何实现预加载优化"></a>500 张图片，如何实现预加载优化</h3><h3 id="懒加载具体实现"><a href="#懒加载具体实现" class="headerlink" title="懒加载具体实现"></a>懒加载具体实现</h3><h3 id="减少http请求的方式"><a href="#减少http请求的方式" class="headerlink" title="减少http请求的方式"></a>减少http请求的方式</h3><h3 id="webpack如何配置大型项目"><a href="#webpack如何配置大型项目" class="headerlink" title="webpack如何配置大型项目"></a>webpack如何配置大型项目</h3><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain">继承与原型链</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前端常见面试题归纳和总结&quot;&gt;&lt;a href=&quot;#前端常见面试题归纳和总结&quot; class=&quot;headerlink&quot; title=&quot;前端常见面试题归纳和总结&quot;&gt;&lt;/a&gt;前端常见面试题归纳和总结&lt;/h1&gt;&lt;h2 id=&quot;HTML-amp-CSS&quot;&gt;&lt;a href=&quot;#H</summary>
      
    
    
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>科学上网</title>
    <link href="http://example.com/posts/43102/"/>
    <id>http://example.com/posts/43102/</id>
    <published>2022-11-26T16:00:00.000Z</published>
    <updated>2023-06-11T15:37:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如何科学上网？"><a href="#如何科学上网？" class="headerlink" title="如何科学上网？"></a>如何科学上网？</h2><p><a href="https://xmrth.fun/user">https://xmrth.fun/user</a><br><a href="https://sockboom.link/auth/login">https://sockboom.link/auth/login</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;如何科学上网？&quot;&gt;&lt;a href=&quot;#如何科学上网？&quot; class=&quot;headerlink&quot; title=&quot;如何科学上网？&quot;&gt;&lt;/a&gt;如何科学上网？&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://xmrth.fun/user&quot;&gt;https://xmrth.fun</summary>
      
    
    
    
    
    <category term="实用" scheme="http://example.com/tags/%E5%AE%9E%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>认清形势 放弃幻想</title>
    <link href="http://example.com/posts/18272/"/>
    <id>http://example.com/posts/18272/</id>
    <published>2022-09-29T16:00:00.000Z</published>
    <updated>2023-06-11T15:34:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202302172231561.JPG"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202302172231561.JPG&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="碎念" scheme="http://example.com/tags/%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>Butterfly的文章结构</title>
    <link href="http://example.com/posts/46029/"/>
    <id>http://example.com/posts/46029/</id>
    <published>2022-09-16T16:00:00.000Z</published>
    <updated>2023-06-11T15:36:21.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>由于自己记性比较差，每次都要去<a href="https://butterfly.js.org/">butterfly</a>找相关配置，所以这里写一篇专题来记录一下，由于比较懒，大部分都是从官方copy过来的内容，基本上是自己看，各位看官轻喷。</p></blockquote><h2 id="新建"><a href="#新建" class="headerlink" title="新建"></a>新建</h2><p>新建文件夹指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n page <span class="string">&#x27;folder_name&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="页面配置"><a href="#页面配置" class="headerlink" title="页面配置"></a>页面配置</h2><p>顾名思义，就是放在我们文章开头的一些配置字段，用于对页面或者文章页的相关配置。</p><p><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209182159592.png" alt="配置的头部"></p><h4 id="文章页配置"><a href="#文章页配置" class="headerlink" title="文章页配置"></a>文章页配置</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">title <span class="comment">// 【必需】文章標題</span></span><br><span class="line">date <span class="comment">// 【必需】文章創建日期</span></span><br><span class="line">updated <span class="comment">// 【可選】文章更新日期</span></span><br><span class="line">tags <span class="comment">// 【可選】文章標籤</span></span><br><span class="line">categories <span class="comment">// 【可選】文章分類</span></span><br><span class="line">keywords <span class="comment">// 【可選】文章關鍵字</span></span><br><span class="line">description <span class="comment">// 【可選】文章描述</span></span><br><span class="line">top_img <span class="comment">// 【可選】文章頂部圖片</span></span><br><span class="line">cover<span class="comment">// 【可選】文章縮略圖(如果沒有設置top_img,文章頁頂部將顯示縮略圖，可設為false/圖片地址/留空)</span></span><br><span class="line">comments <span class="comment">// 【可選】顯示文章評論模塊(默認 true)</span></span><br><span class="line">toc <span class="comment">// 【可選】顯示文章TOC(默認為設置中toc的enable配置)</span></span><br><span class="line">toc_number <span class="comment">// 【可選】顯示toc_number(默認為設置中toc的number配置)</span></span><br><span class="line">toc_style_simple <span class="comment">// 【可選】顯示 toc 簡潔模式</span></span><br><span class="line">copyright <span class="comment">// 【可選】顯示文章版權模塊(默認為設置中post_copyright的enable配置)</span></span><br><span class="line">copyright_author <span class="comment">// 【可選】文章版權模塊的文章作者</span></span><br><span class="line">copyright_author_href <span class="comment">// 【可選】文章版權模塊的文章作者鏈接</span></span><br><span class="line">copyright_url <span class="comment">// 【可選】文章版權模塊的文章連結鏈接</span></span><br><span class="line">copyright_info <span class="comment">// 【可選】文章版權模塊的版權聲明文字</span></span><br><span class="line">mathjax <span class="comment">// 【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)</span></span><br><span class="line">katex<span class="comment">// 【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)</span></span><br><span class="line">aplayer <span class="comment">// 【可選】在需要的頁面加載aplayer的js和css</span></span><br><span class="line">highlight_shrink <span class="comment">// 【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)</span></span><br><span class="line">aside<span class="comment">// 【可選】顯示側邊欄 (默認 true)</span></span><br></pre></td></tr></table></figure><h4 id="页面配置-1"><a href="#页面配置-1" class="headerlink" title="页面配置"></a>页面配置</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">title <span class="comment">//【必需】頁面標題</span></span><br><span class="line">date <span class="comment">//【必需】頁面創建日期</span></span><br><span class="line">type <span class="comment">//【必需】標籤、分類和友情鏈接三個頁面需要配置</span></span><br><span class="line">updated <span class="comment">//【可選】頁面更新日期</span></span><br><span class="line">description <span class="comment">//【可選】頁面描述</span></span><br><span class="line">keywords <span class="comment">//【可選】頁面關鍵字</span></span><br><span class="line">comments <span class="comment">//【可選】顯示頁面評論模塊(默認 true)</span></span><br><span class="line">top_img <span class="comment">//【可選】頁面頂部圖片</span></span><br><span class="line">mathjax <span class="comment">//【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)</span></span><br><span class="line">katex<span class="comment">//【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)</span></span><br><span class="line">aside<span class="comment">//【可選】顯示側邊欄 (默認 true)</span></span><br><span class="line">aplayer<span class="comment">//【可選】在需要的頁面加載aplayer的js和css</span></span><br><span class="line">highlight_shrink  <span class="comment">//【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)</span></span><br></pre></td></tr></table></figure><h2 id="特殊文字-x2F-标签"><a href="#特殊文字-x2F-标签" class="headerlink" title="特殊文字&#x2F;标签"></a>特殊文字&#x2F;标签</h2><h3 id="tag-hide（隐藏标签）"><a href="#tag-hide（隐藏标签）" class="headerlink" title="tag-hide（隐藏标签）"></a>tag-hide（隐藏标签）</h3><div class="note warning flat"><p>2.2.0以上提供</p><p>请注意，tag-hide内的标签外挂content内都不建议有h1 - h6 等标题。因为Toc会把隐藏内容标题也显示出来，而且当滚动屏幕时，如果隐藏内容没有显示出来，会导致Toc的滚动出现异常。</p></div><p>如果你想把一些文字、内容隐藏起来，并提供按钮让用户点击显示。可以使用这个标签外挂。</p><div class="tabs" id="tag-hide"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tag-hide-1">Inline</button></li><li class="tab"><button type="button" data-href="#tag-hide-2">Block</button></li><li class="tab"><button type="button" data-href="#tag-hide-3">Toggle</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tag-hide-1"><p><code>inline</code> 在文本里面添加按钮隐藏内容，只限文字</p><p>( content不能包含英文逗号，可用<code>&amp;sbquo;</code>)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideInline content,display,bg,color %&#125;</span><br></pre></td></tr></table></figure><ul><li><p>content: 文本内容</p></li><li><p>display: 按钮显示的文字(可选)</p></li><li><p>bg: 按钮的背景颜色(可选)</p></li><li><p>color: 按钮文字的颜色(可选)</p></li></ul><blockquote><p>Demo</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">哪个英文字母最酷？ &#123;% hideInline 因为西装裤(C装酷),查看答案,#FF7242,#fff %&#125;</span><br><span class="line"></span><br><span class="line">门里站着一个人? &#123;% hideInline 闪 %&#125;</span><br></pre></td></tr></table></figure><p>哪个英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">查看答案<br>  </button><span class="hide-content">因为西装裤(C装酷)</span></span></p><p>门里站着一个人? <span class="hide-inline"><button type="button" class="hide-button" style="">Click<br>  </button><span class="hide-content">闪</span></span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tag-hide-2"><p><code>block</code>独立的block隐藏内容，可以隐藏很多内容，包括图片，代码块等等</p><p>( display 不能包含英文逗号，可用<code>&amp;sbquo;</code>)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><ul><li>content: 文本内容</li><li>display: 按钮显示的文字(可选)</li><li>bg: 按钮的背景颜色(可选)</li><li>color: 按钮文字的颜色(可选)</li></ul><blockquote><p>Demo</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看答案</span><br><span class="line">&#123;% hideBlock 查看答案 %&#125;</span><br><span class="line">傻子，怎麼可能有答案</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><p>查看答案</p><div class="hide-block"><button type="button" class="hide-button" style="">查看答案    </button><div class="hide-content"><p>傻子，怎麼可能有答案</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tag-hide-3"><blockquote><p>2.3.0以上支持</p></blockquote><p>如果你需要展示的内容太多，可以把它隐藏在收缩框里，需要时再把它展开。</p><p>( display 不能包含英文逗号，可用<code>&amp;sbquo;</code>)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Demo</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle Butterfly安裝方法 %&#125;</span><br><span class="line">在你的博客根目录里</span><br><span class="line"></span><br><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br><span class="line"></span><br><span class="line">如果想要安装比较新的dev分支，可以</span><br><span class="line"></span><br><span class="line">git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br><span class="line"></span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><details class="toggle" ><summary class="toggle-button" style="">Butterfly安裝方法</summary><div class="toggle-content"><p>在你的博客根目录里</p><p>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p><p>如果想要安装比较新的dev分支，可以</p><p>git clone -b dev <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p></div></details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h3><p>移植于next主题</p><p>使用方法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">Unique name   : Unique name of tabs block tag without comma.</span><br><span class="line"><span class="code">                Will be used in #id&#x27;s as prefix for each tab with their index numbers.</span></span><br><span class="line"><span class="code">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span></span><br><span class="line"><span class="code">                Only for current url of post/page must be unique!</span></span><br><span class="line"><span class="code">[index]       : Index number of active tab.</span></span><br><span class="line"><span class="code">                If not specified, first tab (1) will be selected.</span></span><br><span class="line"><span class="code">                If index is -1, no tab will be selected. It&#x27;s will be something like spoiler.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[Tab caption] : Caption of current tab.</span></span><br><span class="line"><span class="code">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span></span><br><span class="line"><span class="code">                If not caption specified, but specified icon, caption will empty.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[@icon]       : FontAwesome icon name (full-name, look like &#x27;fas fa-font&#x27;)</span></span><br><span class="line"><span class="code">                Can be specified with or without space; e.g. &#x27;Tab caption @icon&#x27; similar to &#x27;Tab caption@icon&#x27;.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br></pre></td></tr></table></figure><blockquote><p>Demo 1 - 预设选择第一个【默认】</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><p>Demo 2 - 预设选择tabs</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><p>Demo 3 - 沒有预设值</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><p>Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一個Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一個Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 沒有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸彈@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一個Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸彈</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一個Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 沒有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h3><blockquote><p>3.0以上适用</p></blockquote><p>使用方法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %&#125;</span><br><span class="line"></span><br><span class="line">[url]         : 链接</span><br><span class="line">[text]        : 按钮文字</span><br><span class="line">[icon]        : [可选] 图标</span><br><span class="line">[color]       : [可选] 按钮背景颜色(默认style时）</span><br><span class="line"><span class="code">                      按钮字体和边框颜色(outline时)</span></span><br><span class="line"><span class="code">                      default/blue/pink/red/purple/orange/green</span></span><br><span class="line"><span class="code">[style]       : [可选] 按钮样式 默认实心</span></span><br><span class="line"><span class="code">                      outline/留空</span></span><br><span class="line"><span class="code">[layout]      : [可选] 按钮布局 默认为line</span></span><br><span class="line"><span class="code">                      block/留空</span></span><br><span class="line"><span class="code">[position]    : [可选] 按钮位置 前提是设置了layout为block 默认为左边</span></span><br><span class="line"><span class="code">                      center/right/留空</span></span><br><span class="line"><span class="code">[size]        : [可选] 按钮大小</span></span><br><span class="line"><span class="code">                      larger/留空</span></span><br></pre></td></tr></table></figure><blockquote><p>Demo</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,,outline %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,larger %&#125;</span><br></pre></td></tr></table></figure><p>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/"   title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/"   title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,block %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,block center larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,block right outline larger %&#125;</span><br></pre></td></tr></table></figure><a class="btn-beautify block" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block center larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block right outline larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><p><strong>more than one button in center</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,blue larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,pink larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,red larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,purple larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,orange larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,green larger %&#125;</span><br></pre></td></tr></table></figure><a class="btn-beautify larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify blue larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify pink larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify red larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify purple larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify orange larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify green larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-center&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline blue larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline pink larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline red larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline purple larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline orange larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,outline green larger %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><div class="btn-center"><a class="btn-beautify outline larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline blue larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline pink larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline red larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline purple larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline orange larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline green larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></div><h3 id="inlineImg"><a href="#inlineImg" class="headerlink" title="inlineImg"></a>inlineImg</h3><p>主题中的图片都是默认以<code>块级元素</code>显示，如果你想以<code>内联元素</code>显示，可以使用这个标签外挂。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineImg [src] [height] %&#125;</span><br><span class="line"></span><br><span class="line">[src]      ：    图片链接</span><br><span class="line">[height]   ：    图片高度限制【可选】</span><br></pre></td></tr></table></figure><blockquote><p>Demo</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">你看我长得漂亮不</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://i.loli.net/2021/03/19/2P6ivUGsdaEXSFI.png</span>)</span><br><span class="line"></span><br><span class="line">我觉得很漂亮 &#123;% inlineImg https://i.loli.net/2021/03/19/5M4jUB3ynq7ePgw.png 150px %&#125;</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/jerryc127/CDN@m2/img/hexo-theme-butterfly-docs-inlineimg.png" alt="大胆盗图，各位放过"></p><h3 id="label"><a href="#label" class="headerlink" title="label"></a>label</h3><blockquote><p>3.7.5 及以上版本适用</p></blockquote><p>高亮所需的文字</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label text color %&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>參數</th><th>解釋</th></tr></thead><tbody><tr><td>text</td><td>文字</td></tr><tr><td>color</td><td>【可选】背景顏色，默认为 <code>default</code><br />default&#x2F;blue&#x2F;pink&#x2F;red&#x2F;purple&#x2F;orange&#x2F;green</td></tr></tbody></table><blockquote><p>Demo</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">臣亮言：&#123;% label 先帝 %&#125;创业未半，而&#123;% label 中道崩殂 blue %&#125;。今天下三分，&#123;% label 益州疲敝 pink %&#125;，此诚&#123;% label 危急存亡之秋 red %&#125;也！然侍卫之臣，不懈于内；&#123;% label 忠志之士 purple %&#125;，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。</span><br><span class="line">宫中、府中，俱为一体；陟罚臧否，不宜异同。若有&#123;% label 作奸 orange %&#125;、&#123;% label 犯科 green %&#125;，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</span><br></pre></td></tr></table></figure><p>臣亮言：<mark class="hl-label default">先帝</mark> 创业未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此诚<mark class="hl-label red">危急存亡之秋</mark> 也！然侍卫之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark> ，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。</p><p>宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p><h3 id="timeline"><a href="#timeline" class="headerlink" title="timeline"></a>timeline</h3><blockquote><p>4.0.0 以上支持</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline title,color %&#125;</span><br><span class="line">&lt;!-- timeline title --&gt;</span><br><span class="line">xxxxx</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline title --&gt;</span><br><span class="line">xxxxx</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>标题&#x2F;时间线</td></tr><tr><td>color</td><td>timeline 颜色<br />default(留空) &#x2F; blue &#x2F; pink &#x2F; red &#x2F; purple &#x2F; orange &#x2F; green</td></tr></tbody></table><blockquote><p>Demo</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 2022 %&#125;</span><br><span class="line">&lt;!-- timeline 01-02 --&gt;</span><br><span class="line">这是测试页面</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>这是测试页面</p></div></div></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 2022,blue %&#125;</span><br><span class="line">&lt;!-- timeline 01-02 --&gt;</span><br><span class="line">这是测试页面</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>这是测试页面</p></div></div></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 2022,pink %&#125;</span><br><span class="line">&lt;!-- timeline 01-02 --&gt;</span><br><span class="line">这是测试页面</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><div class="timeline pink"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>这是测试页面</p></div></div></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 2022,red %&#125;</span><br><span class="line">&lt;!-- timeline 01-02 --&gt;</span><br><span class="line">这是测试页面</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><div class="timeline red"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>这是测试页面</p></div></div></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 2022,purple %&#125;</span><br><span class="line">&lt;!-- timeline 01-02 --&gt;</span><br><span class="line">这是测试页面</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><div class="timeline purple"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>这是测试页面</p></div></div></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 2022,orange %&#125;</span><br><span class="line">&lt;!-- timeline 01-02 --&gt;</span><br><span class="line">这是测试页面</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><div class="timeline orange"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>这是测试页面</p></div></div></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 2022,green %&#125;</span><br><span class="line">&lt;!-- timeline 01-02 --&gt;</span><br><span class="line">这是测试页面</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><div class="timeline green"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>这是测试页面</p></div></div></div><h3 id="flink"><a href="#flink" class="headerlink" title="flink"></a>flink</h3><blockquote><p>4.1.0 支持</p></blockquote><p>可在任何界面插入类似友情链接列表效果</p><p>内容格式与友情链接界面一样，支持 yml 格式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% flink %&#125;</span><br><span class="line">xxxxxx</span><br><span class="line">&#123;% endflink %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Demo</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;% flink %&#125;</span><br><span class="line"><span class="bullet">-</span> class<span class="emphasis">_name: 友情链接</span></span><br><span class="line"><span class="emphasis">  class_</span>desc: 那些人，那些事</span><br><span class="line">  link<span class="emphasis">_list:</span></span><br><span class="line"><span class="emphasis">    - name: JerryC</span></span><br><span class="line"><span class="emphasis">      link: https://jerryc.me/</span></span><br><span class="line"><span class="emphasis">      avatar: https://jerryc.me/img/avatar.png</span></span><br><span class="line"><span class="emphasis">      descr: 今日事,今日毕</span></span><br><span class="line"><span class="emphasis">    - name: Hexo</span></span><br><span class="line"><span class="emphasis">      link: https://hexo.io/zh-tw/</span></span><br><span class="line"><span class="emphasis">      avatar: https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</span></span><br><span class="line"><span class="emphasis">      descr: 快速、简单且强大的网志框架</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">- class_</span>name: 网站</span><br><span class="line">  class<span class="emphasis">_desc: 值得推荐的网站</span></span><br><span class="line"><span class="emphasis">  link_</span>list:</span><br><span class="line"><span class="bullet">    -</span> name: Youtube</span><br><span class="line"><span class="code">      link: https://www.youtube.com/</span></span><br><span class="line"><span class="code">      avatar: https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</span></span><br><span class="line"><span class="code">      descr: 视频网站</span></span><br><span class="line"><span class="code">    - name: Weibo</span></span><br><span class="line"><span class="code">      link: https://www.weibo.com/</span></span><br><span class="line"><span class="code">      avatar: https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png</span></span><br><span class="line"><span class="code">      descr: 中国最大社交分享平台</span></span><br><span class="line"><span class="code">    - name: Twitter</span></span><br><span class="line"><span class="code">      link: https://twitter.com/</span></span><br><span class="line"><span class="code">      avatar: https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</span></span><br><span class="line"><span class="code">      descr: 社交分享平台</span></span><br><span class="line"><span class="code">&#123;% endflink %&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/jerryc127/CDN@m2/img/hexo-theme-butterfly-docs-flink-demo.png" alt="暂时盗用作者的友链图片"></p><a class="btn-beautify block green right larger" href="/posts/62832/"   title="⚔️ 拜托，有一个自己博客超酷的！"><i class="far fa-hand-point-right"></i><span>⚔️ 拜托，有一个自己博客超酷的！</span></a><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://butterfly.js.org/posts/dc584b87/#Front-matter">Butterfly 安裝文檔(二) 主題頁面</a><br><a href="https://butterfly.js.org/posts/4aa8abbe/">Butterfly 安裝文檔(三) 主題配置-1</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;由于自己记性比较差，每次都要去&lt;a href=&quot;https://butterfly.js.org/&quot;&gt;butterfly&lt;/a&gt;找相关配置，所以这里写一篇专题来记录一下，由于比较懒，大部分都是从官方copy过来的内容，基本上是自己看，各位看官轻喷。</summary>
      
    
    
    
    
    <category term="实用" scheme="http://example.com/tags/%E5%AE%9E%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>搭一个自己的图床吧！</title>
    <link href="http://example.com/posts/34016/"/>
    <id>http://example.com/posts/34016/</id>
    <published>2022-09-01T16:00:00.000Z</published>
    <updated>2023-06-11T15:35:11.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>没有人是不喜欢白嫖的，除非他想获得更好的体验，这叫为体验付费（其实就是想找个省心的图床）</p></blockquote><h2 id="我买了个阿里云图床"><a href="#我买了个阿里云图床" class="headerlink" title="我买了个阿里云图床"></a>我买了个阿里云图床</h2><h3 id="购买对象存储OSS资源包"><a href="#购买对象存储OSS资源包" class="headerlink" title="购买对象存储OSS资源包"></a>购买对象存储OSS资源包</h3><p>看看这价格，3年27块钱，算起来一个月不到1块钱，四舍五入等于白送啊兄弟们<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209052303223.png" alt="对象存储OSS资源包"><br>然后进入进入OSS控制台，选择创建Bucket，设置名称，读写权限要选择公共读<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209052339161.png" alt="创建Bucket"><br>然后点头像创建个AccessKey，创建的时候要是觉得麻烦可以不用选择子用户AccessKey，创建后会生成你的AccessKey ID 和 AccessKey Secret 可以先记下来，之后会用到。<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209052342073.png" alt="创建AccessKey"></p><h2 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h2><p>picgo据说是最好用的一款开源（免费）图床工具，支持多种类型的图床，配置和使用也十分的方便简洁。<a href="https://molunerfinn.com/PicGo/">官网下载</a></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209052354283.png" alt="拿到这些需要的东西"><br>配置完后可以在上传区上传一张图片看是否能成功上传。<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209121554824.png" alt="在这里上传"><br>配置文件大概是下面这个样子，实际上也用不到，可以直接选择不看。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;picBed&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;uploader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aliyun&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;aliyun&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;accessKeyId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;accessKeySecret&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;area&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span>       <span class="comment">// 存储区域代号</span></span><br><span class="line">      <span class="attr">&quot;bucket&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span>     <span class="comment">// 存储空间名</span></span><br><span class="line">      <span class="attr">&quot;customUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span>  <span class="comment">// 自定义域名，注意要加 http://或者 https://</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span>    <span class="comment">// 针对图片的一些后缀处理参数 PicGo 2.2.0+ PicGo-Core 1.4.0+</span></span><br><span class="line">      <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;img/&quot;</span>    <span class="comment">// 自定义存储路径</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;picgoPlugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Typora搭配PicGo"><a href="#Typora搭配PicGo" class="headerlink" title="Typora搭配PicGo"></a>Typora搭配PicGo</h2><h3 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h3><p>typora是一款Markdown编辑器和阅读器，也是我认为在同类型中最好用的一款，界面简洁功能强大，唯一的缺点就是有点小贵。但是毕竟是在没收费的时候就一直在用，在收费后找了很多同类型的编辑器都没有typora用的顺手，所以就又回到这个上面来。当然囊中羞涩的朋友们可以找到官网下载需要付费前的几个版本下载，或者可以找我要一个特殊的版本拿来使用。假如你财力雄厚，还是希望为开发者团队的辛苦付出<a href="https://typoraio.cn/">支持</a>一下。</p><h3 id="图床配置"><a href="#图床配置" class="headerlink" title="图床配置"></a>图床配置</h3><p>上面的步骤已经配置好了picgo的图床，我们只需要在typora里面选择【文件】➡【偏好设置】➡【图像】，然后根据图示进行操作<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209121551507.png" alt="第一步"><br>成功后提示<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209121551877.png" alt="配置成功"><br>然后就大功告成了，你就可以在使用typora的时候直接把图片复制进去转化为你的图床url了，非常的方便！</p><h2 id="客户端管理"><a href="#客户端管理" class="headerlink" title="客户端管理"></a>客户端管理</h2><p>也可以下载<a href="https://help.aliyun.com/document_detail/209974.htm?spm=a2c4g.11186623.0.0.2f643d3b1uoLfq#task-2065478">ossbrowser</a>客户端直接进行文件管理，省得每次都要到阿里云控制台去找，也是非常的方便。<br>下载完后打开对应填入上面记下来的id和secret就行了。<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209121524019.png" alt="管理页面"></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://t.zoukankan.com/lbys-p-14316888.html">Typora+图床详解（小白都能学得会）</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;没有人是不喜欢白嫖的，除非他想获得更好的体验，这叫为体验付费（其实就是想找个省心的图床）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;我买了个阿里云图床&quot;&gt;&lt;a href=&quot;#我买了个阿里云图床&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
    <category term="实用" scheme="http://example.com/tags/%E5%AE%9E%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>拜托，有一个自己博客超酷的！</title>
    <link href="http://example.com/posts/62832/"/>
    <id>http://example.com/posts/62832/</id>
    <published>2022-08-31T16:00:00.000Z</published>
    <updated>2025-03-07T10:26:00.285Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开始之前的小叨叨"><a href="#开始之前的小叨叨" class="headerlink" title="开始之前的小叨叨"></a>开始之前的小叨叨</h2><h3 id="准备了很久，我用Hexo搭了个博客"><a href="#准备了很久，我用Hexo搭了个博客" class="headerlink" title="准备了很久，我用Hexo搭了个博客"></a>准备了很久，我用Hexo搭了个博客</h3><p>大学还没毕业的时候朋友帮忙做过一个博客，刚好那时买了服务器和域名，运营了差不多半年，也写了一些文章，后来做毕设服务器重装系统，一切都归了0。毕业后自己重新搭个客就变成了一件待办，甚至期间还有模有样的做好了需求分析选好了技术栈，最后在设计数据库表的时候觉得太麻烦，又给搁置了。<br>终于，一个偶然的机会看到一篇用Hexo在github上快速搭建博客，甚至节省了服务器的成本，完后心中再次燃起了小火苗，待办事项终于可以点掉了。对于一个前端来讲，搭建一个博客就好像修建一座城堡一样令人兴奋。好了，话不多说，看正文。<br/><br>开始之前还是建议先看最后一部分<strong>可能会遇到的坑</strong>，可能会减少你很多的烦恼。</p><h2 id="开始之前的准备"><a href="#开始之前的准备" class="headerlink" title="开始之前的准备"></a>开始之前的准备</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>在开始前要确保本地已经安装好了<a href="https://git-scm.com/downloads">git</a>和稳定版本的<a href="https://nodejs.org/en/">node.js</a> ，安装和配置的方式在这里就不再复述，相信这个对大家来讲都不是什么大问题。</p><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>当然是宇宙最强vscode，不过Webstorm或IDEA也不是不可以，选择一个自己趁手的编辑器就好。</p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Hexo的简介就是“快速、简洁且高效的博客框架”，对于想有博客且经费有限的人来说简直是适合的不要不要的。并且有超级多的主题支持，总能挑到一个你喜欢的。</p><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p><h2 id="那就开始吧"><a href="#那就开始吧" class="headerlink" title="那就开始吧"></a>那就开始吧</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>首先来全局安装一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>macos系统在安装的时候可能会报错<code>EACCES</code>，是因为安装需要管理员权限，<code>sudo -s</code>回车，输入密码获得管理员权限，然后再次尝试安装即可。</p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>安装完成后在本地建一个项目文件夹，在文件夹下打开<code>git bash here</code>运行命令。<br/><br>mac可直接终端，进入到文件夹目录下运行命令初始化项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>如果出现报错也莫慌，多半是网络问题造成的，多试几次就好了，下图为初始化成功截图。<br><img width="75%" height="75%" src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202208312303581.png" /></p><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p>初始化完成后可以看到以下这些主要目录<br><img width="75%" height="75%" src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202208312306580.png" /><br>简单介绍下文件结构</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public        // 最终所见网页的所有内容</span><br><span class="line">node_modules  // 插件以及hexo所需node.js模块</span><br><span class="line">_config.yml   // 站点配置文件，设定一些公开信息等</span><br><span class="line">package.json  // 应用程序信息，配置hexo运行所需js包</span><br><span class="line">scaffolds     // 模板文件夹，新建文章，会默认包含对应模板内容</span><br><span class="line">themes        // 存放主题文件，hexo根据主题生成静态网页（速度贼快）</span><br><span class="line">source        // 用于存放用户资源（除 posts 文件夹，其余命名方式为 “ + 文件名”的文件被忽略）</span><br></pre></td></tr></table></figure><p>日常写文的操作都在 source&#x2F;_post下，写文主要是用的<a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown</a>语法，不会用的可以先去补补课。</p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>接下来让我们运行一下吧</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>运行成功后会提醒你在<a href="http://localhost:4000/">本地</a>进行预览你的博客<br><img width="75%" height="75%" src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202208312317891.png" /><br>本地打开的页面<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202208312316281.png" alt="博客页面"><br>到这里本地的任务已经基本是完成了，当然，我们想要的可不仅仅是如此。</p><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>似乎上面的那个页面有一丝丝的简陋，没关系，斯是陋室，惟吾德馨嘛。好了不开玩笑了，hexo的网站上为大家提供了一眼望不到底的主题，<a href="https://hexo.io/themes/">点我直达</a>。<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202208312347657.png" alt="主题"><br>接下来以<a href="https://butterfly.js.org/">butterfly</a>小蝴蝶主题为例，先安装主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>还需要安装pug以及stylus的渲染器，如果没有安装，预览界面可能会出现一些你不喜欢的“小”问题，如下<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209010012464.png" alt="出了点小状况"><br>在控制台全局安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>安装完成后修改一下配置文件<br>网站根目录下找到<code>_config.yml</code>文件，修改主题为<code>butterfly</code>后保存（注意文件格式）<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209010007503.png" alt="就是这个"><br>然后运行预览一下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>运行成功<br><img width="75%" height="75%" src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202208310033427.png" /><br>看一下效果，大气<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209010013318.png" alt="大气"><br>往下接着划，完美<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209010015548.png" alt="嘿，细节"><br>到这里，本地代码要做的事情也就差不多了，如果想整的更漂亮一些或者想换别的主题就需要你自己去研究一下啦。接下来就准备上线吧，城堡建好了怎么着也得给别人看一下的吧！</p><h3 id="上线"><a href="#上线" class="headerlink" title="上线"></a>上线</h3><p>终于要准备上线了，作为平民窟代表，一个极低成本的博客当然也是需求的一部分，那一个免费博客存放服务器当然也是必不可少了。<br><strong>GitHub Pages</strong>就刚好符合我们的要求，<strong>GitHub Pages</strong>允许用户的任何一个Repo的gh-pages分支上的代码可以经由HTTP访问到。类似提供了静态文件服务。<br>首先，我们要新建一个和用户名同名的仓库。进入到github，点击自己的头像选择<strong>Your repositories</strong>，进入仓库页面。然后<strong>New</strong>一个新仓库，仓库名格式为<strong>用户名.github.io</strong>，用户名就是你登陆的名字<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209012332115.png" alt="看图片教程"><br>然后回到我们的代码，修改根目录下的 <code>_config.yml</code>，配置<code>deploy</code>相关信息<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209012340817.png" alt="这样子"><br>这些字段代表的东西</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy <span class="comment"># 这不需要，忽略这个，这个完全是我手滑多打出来的一个，小失误！</span></span><br><span class="line"><span class="built_in">type</span>   <span class="comment"># 上传类型，用git就行</span></span><br><span class="line">repo   <span class="comment"># 仓库地址，clone代码的时候那个HTTPS地址</span></span><br><span class="line">branch <span class="comment"># 代码分支，以你上传的主分支为准</span></span><br><span class="line">token  <span class="comment"># GitHub 的 Personal access tokens，看下图</span></span><br></pre></td></tr></table></figure><p><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209012349476.png" alt="获取token"><br>好了，配置完后安装一下<code>hexo-deployer-git</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>安装完成后运行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>然后你看到下面这个东西就表示推送成功，打开仓库就能看到你刚刚推送的代码。<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209012358888.png" alt="推送成功"><br>当然，到这里还没有结束，还有最后一步。</p><h3 id="最后一步"><a href="#最后一步" class="headerlink" title="最后一步"></a>最后一步</h3><p>打开你刚刚创建的仓库，找到<strong>GitHub Pages</strong>页面，按下图操作，然后大功告成！<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209020005349.png" alt="大功告成"></p><h2 id="如果你也刚好有一个域名"><a href="#如果你也刚好有一个域名" class="headerlink" title="如果你也刚好有一个域名"></a>如果你也刚好有一个域名</h2><h3 id="有域名，那更好了！"><a href="#有域名，那更好了！" class="headerlink" title="有域名，那更好了！"></a>有域名，那更好了！</h3><p>如果你也跟我一样，刚好有一个域名，那么你就可以把github的博客地址解析到你自己的域名上，岂不美哉。<br>因为我的域名是之前从腾讯转到阿里的，那这里就以阿里云为例，先到阿里云的域名控制台找到自己的域名点解析<br>如果没有解析记录的话就新增一条，然后按下图进行配置<br><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209032342661.png" alt="云解析DNS"><br>现在买一个域名的话也不算很贵，第一次买挑一个喜欢的域名一次多充值几年，四舍五入也是等于白嫖了！而且腾讯和阿里也经常会有活动，如果有需求的话可以考虑买一个。</p><h2 id="如果你刚好有一个服务器"><a href="#如果你刚好有一个服务器" class="headerlink" title="如果你刚好有一个服务器"></a>如果你刚好有一个服务器</h2><h3 id="如果你恰好财力雄厚"><a href="#如果你恰好财力雄厚" class="headerlink" title="如果你恰好财力雄厚"></a>如果你恰好财力雄厚</h3><p>如果你刚好有一个服务器，那么，关我什么事，我又没有服务器，想知道怎么部署就自己去百度！或者滑到下面看参考文章，当然也可能有一天我有时间，自己去搭建了一个服务器，那就另当别论了。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="热更新"><a href="#热更新" class="headerlink" title="热更新"></a>热更新</h3><p>你会发现每次本地文件修改后都要重新运行一下<code>hexo s</code>才会生效。所以，怎么会有人不喜欢热更新啊。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为了在修改文件后不再重复启动，将本地项目设置成热更新。</span></span><br><span class="line">$ npm install hexo-server --save</span><br><span class="line"><span class="comment"># 安装完成后，输入以下命令以启动服务器。</span></span><br><span class="line">$ hexo server</span><br><span class="line"><span class="comment"># 如果想要更改端口，或是在执行时遇到了 EADDRINUSE 错误，执行以下命令更换端口。</span></span><br><span class="line">$ hexo server -p 5000</span><br></pre></td></tr></table></figure><h3 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h3><p>写博客的话虽然可以吧图片放在静态文件进行引用，但是太多图片会占据很大的空间，所以还是建议整一个自己的图床来使用。<br>下一期再专门出一期教程来配置图床，<a href="">点我直达</a></p><h2 id="可能会遇到的坑"><a href="#可能会遇到的坑" class="headerlink" title="可能会遇到的坑"></a>可能会遇到的坑</h2><h3 id="github部署问题"><a href="#github部署问题" class="headerlink" title="github部署问题"></a>github部署问题</h3><p>不用自己去部署！不用自己去部署！不用自己去部署！重要的事情说三遍。github初始化的仓库什么都没有，这个不用管，提交命令是集成在hexo的命令里的，按照上面的步骤一步步来就可以了，不用先拉仓库代码。</p><h3 id="端口已占用"><a href="#端口已占用" class="headerlink" title="端口已占用"></a>端口已占用</h3><p><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202208312327377.png" alt="端口已占用"><br>如果想要更改端口，或是在执行时遇到了 EADDRINUSE 错误，执行以下命令更换端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server -p 5000</span><br></pre></td></tr></table></figure><h3 id="推送不上去1"><a href="#推送不上去1" class="headerlink" title="推送不上去1"></a>推送不上去1</h3><p>报错<code>ERROR Deployer not found: git</code>，反思一下自己是不是没有好好看教程，这是因为没安装<code>hexo-deployer-git</code>插件，安装后后再跑一下<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code>命令就可以推送了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="推送不上去2"><a href="#推送不上去2" class="headerlink" title="推送不上去2"></a>推送不上去2</h3><p>你会看到下面这样的报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FATAL Something<span class="string">&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">Error: Spawn failed</span></span><br></pre></td></tr></table></figure><p><img src="https://chinyan.oss-cn-hangzhou.aliyuncs.com/img/202209182333878.png" alt="推送不上去"><br>别担心，网不好而已，在国内github的网站连接很不稳定，这确实挺膈应人，不过多试几次就好了，加油！</p><h3 id="推送不上去"><a href="#推送不上去" class="headerlink" title="推送不上去"></a>推送不上去</h3><p>报错信息<code> error: invalid active developer path</code> <br><br>这个是git的错误，一般会在升级系统后出现，只需要执行以下步骤即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 xcode-select</span></span><br><span class="line">xcode-select --install</span><br><span class="line"><span class="comment"># 在 xcode-select 质量安装好后检查一下git指令的帮助信息</span></span><br><span class="line">git -h</span><br></pre></td></tr></table></figure><p>然后大功告成！</p><h3 id="运行报错"><a href="#运行报错" class="headerlink" title="运行报错"></a>运行报错</h3><p>运行后打开页面后没有显示博客，而是空白页面上显示一串 <code> extends includes/layout.pug block content include ./includes/mixins/post-ui.pug #recent-posts.recent-posts +postUI include includes/pagination.pug</code><br>这个问题大概率是你项目复制到其他地方，然后依赖没有装全</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</span><br><span class="line"><span class="comment"># 安装完后运行</span></span><br><span class="line">hexo hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>解决<br>如果 <code>hexo d</code> 后 <code>ERROR Deployer not found: git</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">npm install --save hexo-deployer-git​</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190">GitHub Pages + Hexo搭建个人博客网站，史上最全教程</a><br><a href="https://pdpeng.github.io/2022/01/19/setup-personal-blog/#%E5%BA%8F%E8%A8%80">快速搭建个人博客 —— 保姆级教程</a></p><hr><ul><li>欢迎光临<a href="https://chinyan.top/">藤源Tofu店 </a></li><li>这里是源</li><li>每天都在进步</li><li>自我感觉超酷</li></ul>]]></content>
    
    
    <summary type="html">用HEXO搭建博客</summary>
    
    
    
    
    <category term="实用" scheme="http://example.com/tags/%E5%AE%9E%E7%94%A8/"/>
    
  </entry>
  
</feed>
